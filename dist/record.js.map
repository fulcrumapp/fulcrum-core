{"version":3,"sources":["../src/record.js"],"names":["Record","attributes","form","_form","updateFromAPIAttributes","loadChangeset","dataSource","callback","toJSON","simple","json","form_id","id","version","_version","created_at","DateUtils","formatISOTimestamp","createdAt","updated_at","updatedAt","client_created_at","clientCreatedAt","client_updated_at","clientUpdatedAt","form_values","formValues","toSimpleJSON","latitude","_latitude","longitude","_longitude","project_id","_projectID","assigned_to_id","_assignedToID","status","_status","created_by_id","_createdByID","created_by","_createdByName","updated_by_id","_updatedByID","updated_by","_updatedBy","horizontal_accuracy","_horizontalAccuracy","vertical_accuracy","_verticalAccuracy","speed","_speed","course","_course","_altitude","altitude","_changesetID","changeset_id","created_location","createdLocation","updated_location","updatedLocation","created_duration","createdDuration","updated_duration","updatedDuration","edited_duration","editedDuration","attrs","_id","uuid","v4","_createdAt","parseISOTimestamp","_updatedAt","_clientCreatedAt","_clientUpdatedAt","_formValuesJSON","_projectName","project","_assignedToName","assigned_to","_updatedByName","_createdDuration","_updatedDuration","_editedDuration","_createdLatitude","created_latitude","_createdLongitude","created_longitude","_createdAltitude","created_altitude","_createdAccuracy","created_horizontal_accuracy","_updatedLatitude","updated_latitude","_updatedLongitude","updated_longitude","_updatedAltitude","updated_altitude","_updatedAccuracy","updated_horizontal_accuracy","updateTimestamps","now","Date","get","key","statusValue","set","value","textValue","updateFromActionAttributes","role","Object","keys","dataName","canChangeProject","projectID","canAssignRecords","assignedToID","canChangeStatus","element","elementsByDataName","formValue","createValueFromString","_formValues","FormValues","_changeset","changeset","isGeometryEnabled","StatusValue","statusField","searchableValue","titleFieldKeys","titles","fieldKey","displayValue","TextUtils","isPresent","push","join","choices","length","isHidden","isReadOnly","isEnabled","name","user","fullName","_createdBy","accuracy","hasCoordinate","type","coordinates","createdLatitude","createdLongitude","updatedLatitude","updatedLongitude","hasCreatedCoordinate","createdAltitude","createdAccuracy","hasUpdatedCoordinate","updatedAltitude","updatedAccuracy","Feature"],"mappings":"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","sourcesContent":["import Feature from './feature';\nimport FormValues from './values/form-values';\nimport TextUtils from './utils/text-utils';\nimport DateUtils from './utils/date-utils';\nimport StatusValue from './values/status-value';\nimport uuid from 'uuid';\nimport loadObject from './load-object';\n\nexport default class Record extends Feature {\n  constructor(attributes, form) {\n    super();\n\n    this._form = form || null;\n\n    this.updateFromAPIAttributes(attributes);\n  }\n\n  get isRecord() {\n    return true;\n  }\n\n  get isRepeatable() {\n    return false;\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  set id(id) {\n    this._id = id;\n  }\n\n  get form() {\n    return this._form;\n  }\n\n  get version() {\n    return this._version;\n  }\n\n  get createdAt() {\n    return this._createdAt;\n  }\n\n  set createdAt(createdAt) {\n    this._createdAt = createdAt;\n  }\n\n  get updatedAt() {\n    return this._updatedAt;\n  }\n\n  set updatedAt(updatedAt) {\n    this._updatedAt = updatedAt;\n  }\n\n  get clientCreatedAt() {\n    return this._clientCreatedAt;\n  }\n\n  set clientCreatedAt(createdAt) {\n    this._clientCreatedAt = createdAt;\n  }\n\n  get clientUpdatedAt() {\n    return this._clientUpdatedAt;\n  }\n\n  set clientUpdatedAt(updatedAt) {\n    this._clientUpdatedAt = updatedAt;\n  }\n\n  get formValues() {\n    if (this._formValues == null) {\n      this._formValues = new FormValues(this._form, this._formValuesJSON);\n    }\n\n    return this._formValues;\n  }\n\n  get hasCoordinate() {\n    return this._latitude != null && this._longitude != null;\n  }\n\n  get changeset() {\n    return this._changeset;\n  }\n\n  set changeset(changeset) {\n    this._changesetID = changeset.id;\n    this._changeset = changeset;\n  }\n\n  get changesetID() {\n    return this._changesetID;\n  }\n\n  loadChangeset(dataSource, callback) {\n    return loadObject(this, dataSource, 'changeset', 'getChangeset', callback);\n  }\n\n  toJSON({simple} = {}) {\n    const json = {};\n\n    json.form_id = this._form.id;\n\n    json.id = this.id || null;\n    json.version = this._version != null ? this._version : null;\n    json.created_at = DateUtils.formatISOTimestamp(this.createdAt);\n    json.updated_at = DateUtils.formatISOTimestamp(this.updatedAt);\n    json.client_created_at = DateUtils.formatISOTimestamp(this.clientCreatedAt);\n    json.client_updated_at = DateUtils.formatISOTimestamp(this.clientUpdatedAt);\n    json.form_values = simple ? this.formValues.toSimpleJSON() : this.formValues.toJSON();\n    json.latitude = this._latitude != null ? this._latitude : null;\n    json.longitude = this._longitude != null ? this._longitude : null;\n    json.project_id = this._projectID || null;\n    json.assigned_to_id = this._assignedToID || null;\n    json.status = this._status || null;\n\n    json.created_by_id = this._createdByID || null;\n    json.created_by = this._createdByName || null;\n    json.updated_by_id = this._updatedByID || null;\n    json.updated_by = this._updatedBy || null;\n\n    json.horizontal_accuracy = this._horizontalAccuracy || null;\n    json.vertical_accuracy = this._verticalAccuracy || null;\n    json.speed = this._speed || null;\n    json.course = this._course || null;\n    \n    if (this._altitude != null) {\n      json.altitude = this._altitude;\n    }\n\n    if (this._changesetID) {\n      json.changeset_id = this._changesetID;\n    }\n\n    json.created_location = this.createdLocation;\n    json.updated_location = this.updatedLocation;\n\n    json.created_duration = this.createdDuration;\n    json.updated_duration = this.updatedDuration;\n    json.edited_duration = this.editedDuration;\n\n    return json;\n  }\n\n  updateFromAPIAttributes(attrs) {\n    const attributes = attrs || {};\n\n    this._id = attributes.id || uuid.v4();\n    this._version = attributes.version != null ? attributes.version : null;\n    this._createdAt = DateUtils.parseISOTimestamp(attributes.created_at);\n    this._updatedAt = DateUtils.parseISOTimestamp(attributes.updated_at);\n    this._clientCreatedAt = DateUtils.parseISOTimestamp(attributes.client_created_at);\n    this._clientUpdatedAt = DateUtils.parseISOTimestamp(attributes.client_updated_at);\n    this._formValuesJSON = attributes.form_values || {};\n    this._latitude = attributes.latitude != null ? attributes.latitude : null;\n    this._longitude = attributes.longitude != null ? attributes.longitude : null;\n    this._projectID = attributes.project_id || null;\n    this._projectName = attributes.project || null;\n    this._assignedToID = attributes.assigned_to_id || null;\n    this._assignedToName = attributes.assigned_to || null;\n    this._status = attributes.status || null;\n\n    this._createdByID = attributes.created_by_id || null;\n    this._createdByName = attributes.created_by || null;\n    this._updatedByID = attributes.updated_by_id || null;\n    this._updatedByName = attributes.updated_by || null;\n\n    this._horizontalAccuracy = attributes.horizontal_accuracy != null ? attributes.horizontal_accuracy : null;\n    this._verticalAccuracy = attributes.vertical_accuracy != null ? attributes.vertical_accuracy : null;\n    this._altitude = attributes.altitude != null ? attributes.altitude : null;\n    this._speed = attributes.speed != null ? attributes.speed : null;\n    this._course = attributes.course != null ? attributes.course : null;\n\n    this._changesetID = attributes.changeset_id || null;\n\n    this._createdDuration = attributes.created_duration != null ? attributes.created_duration : null;\n    this._updatedDuration = attributes.updated_duration != null ? attributes.updated_duration : null;\n    this._editedDuration = attributes.edited_duration != null ? attributes.edited_duration : null;\n\n    const createdLocation = attributes.created_location;\n\n    this._createdLatitude = attributes.created_latitude != null ? attributes.created_latitude : null;\n    this._createdLongitude = attributes.created_longitude != null ? attributes.created_longitude : null;\n    this._createdAltitude = attributes.created_altitude != null ? attributes.created_altitude : null;\n    this._createdAccuracy = attributes.created_horizontal_accuracy != null ? attributes.created_horizontal_accuracy : null;\n\n    if (createdLocation) {\n      this._createdLatitude = createdLocation.latitude;\n      this._createdLongitude = createdLocation.longitude;\n      this._createdAltitude = createdLocation.altitude;\n      this._createdAccuracy = createdLocation.horizontal_accuracy;\n    }\n\n    const updatedLocation = attributes.updated_location;\n\n    this._updatedLatitude = attributes.updated_latitude != null ? attributes.updated_latitude : null;\n    this._updatedLongitude = attributes.updated_longitude != null ? attributes.updated_longitude : null;\n    this._updatedAltitude = attributes.updated_altitude != null ? attributes.updated_altitude : null;\n    this._updatedAccuracy = attributes.updated_horizontal_accuracy != null ? attributes.updated_horizontal_accuracy : null;\n\n    if (updatedLocation) {\n      this._updatedLatitude = updatedLocation.latitude;\n      this._updatedLongitude = updatedLocation.longitude;\n      this._updatedAltitude = updatedLocation.altitude;\n      this._updatedAccuracy = updatedLocation.horizontal_accuracy;\n    }\n  }\n\n  updateTimestamps() {\n    const now = new Date();\n\n    if (this.clientCreatedAt == null) {\n      this.clientCreatedAt = now;\n    }\n\n    this.clientUpdatedAt = now;\n  }\n\n  get isGeometryEnabled() {\n    return this.form.isGeometryEnabled;\n  }\n\n  get(key, formValues) {\n    if (key === '@status') {\n      return this.statusValue;\n    }\n\n    return formValues.get(key);\n  }\n\n  set(key, value, formValues) {\n    if (key === '@status') {\n      this.status = value.textValue;\n      return;\n    }\n\n    formValues.set(key, value);\n  }\n\n  get statusValue() {\n    return new StatusValue(this.form.statusField, this.status);\n  }\n\n  get searchableValue() {\n    return this.formValues.searchableValue;\n  }\n\n  get displayValue() {\n    const titleFieldKeys = this.form.titleFieldKeys;\n    const titles = [];\n\n    for (const fieldKey of titleFieldKeys) {\n      const value = this.formValues.get(fieldKey);\n\n      if (value) {\n        const displayValue = value.displayValue;\n\n        if (TextUtils.isPresent(displayValue)) {\n          titles.push(displayValue);\n        }\n      }\n    }\n\n    return titles.join(', ');\n  }\n\n  get isStatusFieldEnabled() {\n    // invisible if there are no statuses or the status field is marked as hidden\n    if (this.form.statusField.choices.length === 0 || this.form.statusField.isHidden) {\n      return false;\n    }\n\n    // invisible if it's readonly and there's no status (nothing for the user to read)\n    if (this.status == null && this.form.statusField.isReadOnly) {\n      return false;\n    }\n\n    return this.form.statusField.isEnabled;\n  }\n\n  get formID() {\n    return this.form ? this.form.id : null;\n  }\n\n  get projectName() {\n    return this._projectName;\n  }\n\n  get projectID() {\n    return this._projectID;\n  }\n\n  set projectID(id) {\n    if (id !== this._projectID) {\n      this._projectID = id;\n      this._projectName = null;\n    }\n  }\n\n  set project(project) {\n    if (project) {\n      this._projectID = project.id;\n      this._projectName = project.name;\n    } else {\n      this._projectID = null;\n      this._projectName = null;\n    }\n  }\n\n  get assignedToName() {\n    return this._assignedToName;\n  }\n\n  get assignedToID() {\n    return this._assignedToID;\n  }\n\n  set assignedTo(user) {\n    if (user) {\n      this._assignedToID = user.id;\n      this._assignedToName = user.fullName;\n    } else {\n      this._assignedToID = null;\n      this._assignedToName = null;\n    }\n  }\n\n  set assignedToID(id) {\n    if (id !== this._assignedToID) {\n      this._assignedToID = id;\n      this._assignedToName = null;\n    }\n  }\n\n  get createdBy() {\n    return this._createdBy;\n  }\n\n  get createdByID() {\n    return this._createdByID;\n  }\n\n  get createdByName() {\n    return this._createdByName;\n  }\n\n  get updatedBy() {\n    return this._updatedBy;\n  }\n\n  get updatedByID() {\n    return this._updatedByID;\n  }\n\n  get updatedByName() {\n    return this._updatedByName;\n  }\n\n  get status() {\n    return this._status;\n  }\n\n  set status(status) {\n    this._status = status;\n  }\n\n  get latitude() {\n    return this._latitude;\n  }\n\n  set latitude(latitude) {\n    this._latitude = latitude;\n  }\n\n  get longitude() {\n    return this._longitude;\n  }\n\n  set longitude(longitude) {\n    this._longitude = longitude;\n  }\n\n  get horizontalAccuracy() {\n    return this._horizontalAccuracy;\n  }\n\n  set horizontalAccuracy(accuracy) {\n    this._horizontalAccuracy = accuracy;\n  }\n\n  get verticalAccuracy() {\n    return this._verticalAccuracy;\n  }\n\n  set verticalAccuracy(accuracy) {\n    this._verticalAccuracy = accuracy;\n  }\n\n  get altitude() {\n    return this._altitude;\n  }\n\n  set altitude(altitude) {\n    this._altitude = altitude;\n  }\n\n  get speed() {\n    return this._speed;\n  }\n\n  set speed(speed) {\n    this._speed = speed;\n  }\n\n  get course() {\n    return this._course;\n  }\n\n  set course(course) {\n    this._course = course;\n  }\n\n  get geometryAsGeoJSON() {\n    if (!this.hasCoordinate) {\n      return null;\n    }\n\n    return {\n      type: 'Point',\n      coordinates: [\n        this.longitude,\n        this.latitude\n      ]\n    };\n  }\n\n  get createdDuration() {\n    return this._createdDuration;\n  }\n\n  set createdDuration(value) {\n    this._createdDuration = (value != null ? +value : null);\n  }\n\n  get updatedDuration() {\n    return this._updatedDuration;\n  }\n\n  set updatedDuration(value) {\n    this._updatedDuration = (value != null ? +value : null);\n  }\n\n  get editedDuration() {\n    return this._editedDuration;\n  }\n\n  set editedDuration(value) {\n    this._editedDuration = (value != null ? +value : null);\n  }\n\n  get createdLatitude() {\n    return this._createdLatitude;\n  }\n\n  get createdLongitude() {\n    return this._createdLongitude;\n  }\n\n  get createdAltitude() {\n    return this._createdAltitude;\n  }\n\n  get createdAccuracy() {\n    return this._createdAccuracy;\n  }\n\n  set createdLatitude(value) {\n    this._createdLatitude = (value != null ? +value : null);\n  }\n\n  set createdLongitude(value) {\n    this._createdLongitude = (value != null ? +value : null);\n  }\n\n  set createdAltitude(value) {\n    this._createdAltitude = (value != null ? +value : null);\n  }\n\n  set createdAccuracy(value) {\n    this._createdAccuracy = (value != null ? +value : null);\n  }\n\n  get updatedLatitude() {\n    return this._updatedLatitude;\n  }\n\n  get updatedLongitude() {\n    return this._updatedLongitude;\n  }\n\n  get updatedAltitude() {\n    return this._updatedAltitude;\n  }\n\n  get updatedAccuracy() {\n    return this._updatedAccuracy;\n  }\n\n  set updatedLatitude(value) {\n    this._updatedLatitude = (value != null ? +value : null);\n  }\n\n  set updatedLongitude(value) {\n    this._updatedLongitude = (value != null ? +value : null);\n  }\n\n  set updatedAltitude(value) {\n    this._updatedAltitude = (value != null ? +value : null);\n  }\n\n  set updatedAccuracy(value) {\n    this._updatedAccuracy = (value != null ? +value : null);\n  }\n\n  get hasCreatedCoordinate() {\n    return this.createdLatitude != null && this.createdLongitude != null;\n  }\n\n  get hasUpdatedCoordinate() {\n    return this.updatedLatitude != null && this.updatedLongitude != null;\n  }\n\n  get createdLocation() {\n    if (this.hasCreatedCoordinate) {\n      return {\n        latitude: this.createdLatitude,\n        longitude: this.createdLongitude,\n        altitude: this.createdAltitude,\n        horizontal_accuracy: this.createdAccuracy\n      };\n    }\n\n    return null;\n  }\n\n  get updatedLocation() {\n    if (this.hasUpdatedCoordinate) {\n      return {\n        latitude: this.updatedLatitude,\n        longitude: this.updatedLongitude,\n        altitude: this.updatedAltitude,\n        horizontal_accuracy: this.updatedAccuracy\n      };\n    }\n\n    return null;\n  }\n\n  updateFromActionAttributes(attributes, role) {\n    for (const dataName of Object.keys(attributes)) {\n      switch (dataName) {\n        case 'project_id': {\n          if (attributes.project_id && role.canChangeProject) {\n            this.projectID = attributes.project_id;\n          }\n\n          break;\n        }\n\n        case 'assigned_to_id': {\n          if (attributes.assigned_to_id && role.canAssignRecords) {\n            this.assignedToID = attributes.assigned_to_id;\n          }\n\n          break;\n        }\n\n        case 'status': {\n          if (attributes.status && role.canChangeStatus) {\n            this.status = attributes.status;\n          }\n\n          break;\n        }\n\n        case 'latitude': {\n          if (attributes.latitude != null && attributes.latitude >= -90 && attributes.latitude <= 90) {\n            this.latitude = +attributes.latitude;\n          }\n\n          break;\n        }\n\n        case 'longitude': {\n          if (attributes.longitude != null && attributes.longitude >= -180 && attributes.longitude <= 180) {\n            this.longitude = +attributes.longitude;\n          }\n\n          break;\n        }\n\n        default: {\n          const element = this.form.elementsByDataName[dataName];\n          const value = attributes[dataName];\n\n          if (element && value != null) {\n            const formValue = this.formValues.createValueFromString(element, value);\n\n            if (formValue) {\n              this.formValues.set(element.key, formValue);\n            }\n          }\n\n          break;\n        }\n      }\n    }\n  }\n}\n"],"file":"record.js"}