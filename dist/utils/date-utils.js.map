{"version":3,"file":"date-utils.js","names":["intl","Intl","global","DateUtils","parseDate","dateString","date","Date","replace","isNaN","getTime","parseTime","timeString","length","split","hours","minutes","formatTime","padStart","getHours","getMinutes","formatTimeSeconds","seconds","milliseconds","ss","div","mm","hh","ms","h","Math","floor","m","s","u","formatTimeParts","parseISOTimestamp","timestampString","parseEpochTimestamp","parseFloat","formatISOTimestamp","toISOString","formatEpochTimestamp","toFixed","isValidTime","parts","hourPart","minutePart","hour","minute","isValidDate","yearPart","monthPart","dayPart","year","month","day","parsed","formatDate","getFullYear","getMonth","getDate","formatLocalizedDate","__formatLocalizedDate","formatLocalizedTimestamp","toLocaleString","formatRelativeTimestamp","relativeDate","Locale","supportsECMA402","options","result","DateTimeFormat","currentLocale","format","ex"],"sources":["../../src/utils/date-utils.js"],"sourcesContent":["import Locale from './locale';\nimport padStart from 'lodash.padstart';\nimport relativeDate from 'relative-date';\n\nlet intl = null;\n\nif (typeof Intl !== 'undefined') {\n  intl = global.Intl;\n}\n\nexport default class DateUtils {\n  static parseDate(dateString) {\n    const date = new Date(dateString.replace(/-/g, '/'));\n\n    if (date == null || isNaN(date.getTime())) {\n      return null;\n    }\n\n    return date;\n  }\n\n  static parseTime(timeString) {\n    if (!((timeString != null) && timeString.length === 5)) {\n      return null;\n    }\n\n    let [ hours, minutes ] = timeString.split(':');\n\n    if (hours == null || minutes == null) {\n      return null;\n    }\n\n    hours = +hours;\n    minutes = +minutes;\n\n    if (isNaN(hours) || isNaN(minutes)) {\n      return null;\n    }\n\n    return (hours * 60) + minutes;\n  }\n\n  static formatTime(date) {\n    const hours = padStart(date.getHours(), 2, '0');\n    const minutes = padStart(date.getMinutes(), 2, '0');\n\n    return hours + ':' + minutes;\n  }\n\n  static formatTimeSeconds(seconds, milliseconds = false) {\n    const ss = +seconds % 60;\n    const div = (+seconds - ss) / 60;\n    const mm = div % 60;\n    const hh = (div - mm) / 60;\n    const ms = (ss * 1000 % 1000);\n\n    const h = padStart(Math.floor(hh), 2, '0');\n    const m = padStart(Math.floor(mm), 2, '0');\n    const s = padStart(Math.floor(ss), 2, '0');\n    const u = padStart(Math.floor(ms), 3, '0');\n\n    return h + ':' + m + ':' + s + (milliseconds ? '.' + u : '');\n  }\n\n  static formatTimeParts(hours, minutes, seconds) {\n    const h = padStart(+hours, 2, '0');\n    const m = padStart(+minutes, 2, '0');\n    const s = padStart(+seconds, 2, '0');\n\n    return h + ':' + m + ':' + s;\n  }\n\n  static parseISOTimestamp(timestampString) {\n    if (!timestampString) {\n      return null;\n    }\n\n    return new Date(timestampString);\n  }\n\n  static parseEpochTimestamp(timestampString) {\n    if (!timestampString) {\n      return null;\n    }\n\n    return new Date(parseFloat(timestampString) * 1000);\n  }\n\n  static formatISOTimestamp(date) {\n    if (date == null || isNaN(date.getTime())) {\n      return null;\n    }\n    return date.toISOString();\n  }\n\n  static formatEpochTimestamp(date) {\n    if (date == null || isNaN(date.getTime())) {\n      return null;\n    }\n    return (date.getTime() / 1000).toFixed(3);\n  }\n\n  static isValidTime(timeString) {\n    if (timeString == null) {\n      return true;\n    }\n\n    if (timeString.length !== 5) {\n      return false;\n    }\n\n    const parts = timeString.split(':');\n\n    if (parts.length !== 2) {\n      return false;\n    }\n\n    const [ hourPart, minutePart ] = parts;\n\n    if (hourPart.length !== 2 || minutePart.length !== 2) {\n      return false;\n    }\n\n    const hour = +hourPart;\n    const minute = +minutePart;\n\n    if (isNaN(hour) || isNaN(minute)) {\n      return false;\n    }\n\n    if (hour < 0 || hour >= 24) {\n      return false;\n    }\n\n    if (minute < 0 || minute >= 60) {\n      return false;\n    }\n\n    return true;\n  }\n\n  static isValidDate(dateString) {\n    if (dateString == null) {\n      return true;\n    }\n\n    if (dateString.length !== 10) {\n      return false;\n    }\n\n    const parts = dateString.split('-');\n\n    if (parts.length !== 3) {\n      return false;\n    }\n\n    const [ yearPart, monthPart, dayPart ] = parts;\n\n    if (yearPart.length !== 4 ||\n        monthPart.length !== 2 ||\n        dayPart.length !== 2) {\n      return false;\n    }\n\n    const year = +yearPart;\n    const month = +monthPart;\n    const day = +dayPart;\n\n    if (isNaN(year) || isNaN(month) || isNaN(day)) {\n      return false;\n    }\n\n    const parsed = DateUtils.parseDate(dateString);\n\n    return parsed && !isNaN(parsed);\n  }\n\n  static formatDate(date) {\n    if (date == null) {\n      return null;\n    }\n\n    const year = date.getFullYear();\n    const month = padStart(date.getMonth() + 1, 2, '0');\n    const day = padStart(date.getDate(), 2, '0');\n\n    return year + '-' + month + '-' + day;\n  }\n\n  static formatLocalizedDate(date) {\n    if (date == null) {\n      return null;\n    }\n\n    return DateUtils.__formatLocalizedDate(date);\n  }\n\n  static formatLocalizedTimestamp(date) {\n    if (date == null) {\n      return null;\n    }\n\n    return date.toLocaleString();\n  }\n\n  static formatRelativeTimestamp(date) {\n    return relativeDate(date);\n  }\n\n  static __formatLocalizedDate(date) {\n    if (!Locale.supportsECMA402()) {\n      const year = date.getFullYear();\n      const month = padStart(date.getMonth() + 1, 2, '0');\n      const day = padStart(date.getDate(), 2, '0');\n      return year + '-' + month + '-' + day;\n    }\n\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n\n    let result = null;\n\n    try {\n      result = new intl.DateTimeFormat(Locale.currentLocale(), options).format(date);\n    } catch (ex) {\n      // RangeError: Provided date is not in valid range.\n    }\n\n    return result;\n  }\n}\n"],"mappings":"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"}