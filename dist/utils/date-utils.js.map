{"version":3,"file":"date-utils.js","names":["intl","Intl","global","DateUtils","parseDate","dateString","date","Date","replace","isNaN","getTime","parseTime","timeString","length","split","hours","minutes","formatTime","padStart","getHours","getMinutes","formatTimeSeconds","seconds","milliseconds","ss","div","mm","hh","ms","h","Math","floor","m","s","u","formatTimeParts","parseISOTimestamp","timestampString","parseEpochTimestamp","parseFloat","formatISOTimestamp","toISOString","formatEpochTimestamp","toFixed","isValidTime","parts","hourPart","minutePart","secondsPart","hour","minute","isValidDate","yearPart","monthPart","dayPart","year","month","day","parsed","formatDate","getFullYear","getMonth","getDate","formatLocalizedDate","__formatLocalizedDate","formatLocalizedTimestamp","toLocaleString","formatRelativeTimestamp","relativeDate","Locale","supportsECMA402","options","result","DateTimeFormat","currentLocale","format","ex"],"sources":["../../src/utils/date-utils.js"],"sourcesContent":["import Locale from './locale';\nimport padStart from 'lodash.padstart';\nimport relativeDate from 'relative-date';\n\nlet intl = null;\n\nif (typeof Intl !== 'undefined') {\n  intl = global.Intl;\n}\n\nexport default class DateUtils {\n  static parseDate(dateString) {\n    const date = new Date(dateString.replace(/-/g, '/'));\n\n    if (date == null || isNaN(date.getTime())) {\n      return null;\n    }\n\n    return date;\n  }\n\n  static parseTime(timeString) {\n    if (!((timeString != null) && timeString.length === 5)) {\n      return null;\n    }\n\n    let [hours, minutes] = timeString.split(':');\n\n    if (hours == null || minutes == null) {\n      return null;\n    }\n\n    hours = +hours;\n    minutes = +minutes;\n\n    if (isNaN(hours) || isNaN(minutes)) {\n      return null;\n    }\n\n    return (hours * 60) + minutes;\n  }\n\n  static formatTime(date) {\n    const hours = padStart(date.getHours(), 2, '0');\n    const minutes = padStart(date.getMinutes(), 2, '0');\n\n    return hours + ':' + minutes;\n  }\n\n  static formatTimeSeconds(seconds, milliseconds = false) {\n    const ss = +seconds % 60;\n    const div = (+seconds - ss) / 60;\n    const mm = div % 60;\n    const hh = (div - mm) / 60;\n    const ms = (ss * 1000 % 1000);\n\n    const h = padStart(Math.floor(hh), 2, '0');\n    const m = padStart(Math.floor(mm), 2, '0');\n    const s = padStart(Math.floor(ss), 2, '0');\n    const u = padStart(Math.floor(ms), 3, '0');\n\n    return h + ':' + m + ':' + s + (milliseconds ? '.' + u : '');\n  }\n\n  static formatTimeParts(hours, minutes, seconds) {\n    const h = padStart(+hours, 2, '0');\n    const m = padStart(+minutes, 2, '0');\n    const s = padStart(+seconds, 2, '0');\n\n    return h + ':' + m + ':' + s;\n  }\n\n  static parseISOTimestamp(timestampString) {\n    if (!timestampString) {\n      return null;\n    }\n\n    return new Date(timestampString);\n  }\n\n  static parseEpochTimestamp(timestampString) {\n    if (!timestampString) {\n      return null;\n    }\n\n    return new Date(parseFloat(timestampString) * 1000);\n  }\n\n  static formatISOTimestamp(date) {\n    if (date == null || isNaN(date.getTime())) {\n      return null;\n    }\n    return date.toISOString();\n  }\n\n  static formatEpochTimestamp(date) {\n    if (date == null || isNaN(date.getTime())) {\n      return null;\n    }\n    return (date.getTime() / 1000).toFixed(3);\n  }\n\n  static isValidTime(timeString) {\n    if (timeString == null) {\n      return true;\n    }\n\n    if (timeString.length < 5 || timeString.length > 8) {\n      return false;\n    }\n\n    const parts = timeString.split(':');\n\n    if (parts.length < 2 || parts.length > 3) {\n      return false;\n    }\n\n    const [hourPart, minutePart, secondsPart] = parts;\n\n    if (hourPart.length !== 2 || minutePart.length !== 2) {\n      return false;\n    }\n\n    const hour = +hourPart;\n    const minute = +minutePart;\n\n    if (isNaN(hour) || isNaN(minute)) {\n      return false;\n    }\n\n    if (hour < 0 || hour >= 24) {\n      return false;\n    }\n\n    if (minute < 0 || minute >= 60) {\n      return false;\n    }\n\n    if (secondsPart) {\n      if (secondsPart.length !== 2) {\n        return false;\n      }\n\n      const seconds = +secondsPart;\n\n      if (isNaN(seconds)) {\n        return false;\n      }\n\n      if (seconds < 0 || seconds >= 60) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  static isValidDate(dateString) {\n    if (dateString == null) {\n      return true;\n    }\n\n    if (dateString.length !== 10) {\n      return false;\n    }\n\n    const parts = dateString.split('-');\n\n    if (parts.length !== 3) {\n      return false;\n    }\n\n    const [yearPart, monthPart, dayPart] = parts;\n\n    if (yearPart.length !== 4 ||\n      monthPart.length !== 2 ||\n      dayPart.length !== 2) {\n      return false;\n    }\n\n    const year = +yearPart;\n    const month = +monthPart;\n    const day = +dayPart;\n\n    if (isNaN(year) || isNaN(month) || isNaN(day)) {\n      return false;\n    }\n\n    const parsed = DateUtils.parseDate(dateString);\n\n    return parsed && !isNaN(parsed);\n  }\n\n  static formatDate(date) {\n    if (date == null) {\n      return null;\n    }\n\n    const year = date.getFullYear();\n    const month = padStart(date.getMonth() + 1, 2, '0');\n    const day = padStart(date.getDate(), 2, '0');\n\n    return year + '-' + month + '-' + day;\n  }\n\n  static formatLocalizedDate(date) {\n    if (date == null) {\n      return null;\n    }\n\n    return DateUtils.__formatLocalizedDate(date);\n  }\n\n  static formatLocalizedTimestamp(date) {\n    if (date == null) {\n      return null;\n    }\n\n    return date.toLocaleString();\n  }\n\n  static formatRelativeTimestamp(date) {\n    return relativeDate(date);\n  }\n\n  static __formatLocalizedDate(date) {\n    if (!Locale.supportsECMA402()) {\n      const year = date.getFullYear();\n      const month = padStart(date.getMonth() + 1, 2, '0');\n      const day = padStart(date.getDate(), 2, '0');\n      return year + '-' + month + '-' + day;\n    }\n\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n\n    let result = null;\n\n    try {\n      result = new intl.DateTimeFormat(Locale.currentLocale(), options).format(date);\n    } catch (ex) {\n      // RangeError: Provided date is not in valid range.\n    }\n\n    return result;\n  }\n}\n"],"mappings":"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"}