{"version":3,"file":"number-utils.js","names":["MachineFormatterOptions","style","useGrouping","minimumFractionDigits","maximumFractionDigits","intl","Intl","NumberUtils","parseDouble","input","number","isNaN","localizedStringFromMachineString","machineString","allowDecimals","localeDecimalFormatter","format","localeIntegerFormatter","formatMachine","formatWithFormatter","machineFormatter","formatCurrency","currency","__formatCurrency","Locale","supportsECMA402","options","currencyDisplay","formatter","global","NumberFormat","currentLocale","string","toString","_localeDecimalFormatter","_localeIntegerFormatter","_machineFormatter"],"sources":["../../src/utils/number-utils.js"],"sourcesContent":["import Locale from './locale';\n\nconst MachineFormatterOptions = {\n  style: 'decimal',\n  useGrouping: false,\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 20\n};\n\nlet intl = null;\n\nif (typeof Intl !== 'undefined') {\n  /* eslint-disable no-undef */\n  intl = Intl;\n  /* eslint-enable no-undef */\n}\n\nexport default class NumberUtils {\n  static parseDouble(input) {\n    const number = +input;\n\n    if (number == null || isNaN(number)) {\n      return null;\n    }\n\n    return number;\n  }\n\n  static get localeDecimalFormatter() {\n    if (!this._localeDecimalFormatter && intl) {\n      this._localeDecimalFormatter = new intl.NumberFormat([], MachineFormatterOptions);\n    }\n\n    return this._localeDecimalFormatter;\n  }\n\n  static get localeIntegerFormatter() {\n    if (!this._localeIntegerFormatter && intl) {\n      this._localeIntegerFormatter = new intl.NumberFormat([], {useGrouping: false, maximumFractionDigits: 0});\n    }\n\n    return this._localeIntegerFormatter;\n  }\n\n  static get machineFormatter() {\n    if (!this._machineFormatter && intl) {\n      this._machineFormatter = new intl.NumberFormat([ 'en-US' ], MachineFormatterOptions);\n    }\n\n    return this._machineFormatter;\n  }\n\n  static localizedStringFromMachineString(machineString, allowDecimals = true) {\n    if (allowDecimals && NumberUtils.localeDecimalFormatter) {\n      return NumberUtils.localeDecimalFormatter.format(machineString);\n    } else if (NumberUtils.localeIntegerFormatter) {\n      return NumberUtils.localeIntegerFormatter.format(machineString);\n    }\n\n    return machineString;\n  }\n\n  static formatMachine(number) {\n    return NumberUtils.formatWithFormatter(NumberUtils.machineFormatter, number);\n  }\n\n  static formatCurrency(number, currency) {\n    if (number == null) {\n      return null;\n    }\n\n    return NumberUtils.__formatCurrency(number, currency);\n  }\n\n  static __formatCurrency(number, currency) {\n    if (!Locale.supportsECMA402()) {\n      return number;\n    }\n\n    const options = {\n      style: 'currency',\n      currency: currency,\n      currencyDisplay: 'symbol',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    };\n\n    const formatter = new global.Intl.NumberFormat(Locale.currentLocale(), options);\n\n    return formatter.format(number);\n  }\n\n  static formatWithFormatter(formatter, number) {\n    if (formatter != null) {\n      const string = formatter.format(number);\n\n      if (string === 'NaN') {\n        return number;\n      }\n\n      return string;\n    }\n\n    return number.toString();\n  }\n}\n"],"mappings":"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"}