{"version":3,"sources":["../../src/values/dynamic-value.js"],"names":["DynamicValue","element","items","_items","Array","isArray","item","push","ItemClass","format","part","isEmpty","map","_metadataJSON","_elementsJSON","values","toJSON","isEqual","value","contains","startsWith","isLessThan","length","NumberUtils","parseDouble","isGreaterThan","mapItems","callback","slice","itemIndex","id","index","insertItem","removeItem","splice","createNewItem","attributes","metadata","uuid","v4","elements","DynamicItemValue","key","MultipleValueItem","FormValue"],"mappings":"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","sourcesContent":["import FormValue from './form-value';\nimport DynamicItemValue from './dynamic-item-value';\nimport MultipleValueItem from './multiple-value-item';\nimport NumberUtils from '../utils/number-utils';\nimport uuid from 'uuid';\n\nexport default class DynamicValue extends FormValue {\n  constructor(element, items) {\n    super(element, items);\n\n    this._items = [];\n\n    if (Array.isArray(items)) {\n      for (const item of items) {\n        this._items.push(new this.ItemClass(this, item));\n      }\n    }\n  }\n\n  get ItemClass() {\n    return DynamicItemValue;\n  }\n\n  get isEmpty() {\n    return this._items.length === 0;\n  }\n\n  get searchableValue() {\n    return null;\n  }\n\n  get length() {\n    return this._items.length;\n  }\n\n  format({part = null}) {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    if (part === 'metadata') {\n      return this.items.map(item => item._metadataJSON);\n    } else if (part === 'elements') {\n      return this.items.map(item => item._elementsJSON);\n    }\n\n    return this.items.map(item => item.values.toJSON());\n  }\n\n  get columnValue() {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    const metadata = [];\n    const elements = [];\n    const values = [];\n\n    for (const item of this._items) {\n      metadata.push(item.metadata);\n      elements.push(item.elements);\n      values.push(item.values);\n    }\n\n    const value = {};\n\n    value['f' + this.element.key + '_metadata'] = metadata;\n    value['f' + this.element.key + '_elements'] = elements;\n    value['f' + this.element.key + '_values'] = values;\n\n    return value;\n  }\n\n  toJSON() {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    const items = [];\n\n    for (const item of this._items) {\n      items.push(item.toJSON());\n    }\n\n    return items;\n  }\n\n  get multipleValues() {\n    const items = [];\n\n    for (const item of this._items) {\n      items.push(new MultipleValueItem(this.element, item.values));\n    }\n\n    return items;\n  }\n\n  get displayValue() {\n    if (this.length === 1) {\n      return '1 Dynamic field';\n    }\n\n    return `${this.length} Dynamic Fields`;\n  }\n\n  isEqual(value) {\n    return false;\n  }\n\n  contains(value) {\n    return false;\n  }\n\n  startsWith(value) {\n    return false;\n  }\n\n  isLessThan(value) {\n    return this.length < NumberUtils.parseDouble(value);\n  }\n\n  isGreaterThan(value) {\n    return this.length > NumberUtils.parseDouble(value);\n  }\n\n  mapItems(callback) {\n    return this._items.slice().map(callback);\n  }\n\n  get items() {\n    return this._items.slice();\n  }\n\n  itemIndex(id) {\n    for (let index = 0; index < this._items.length; ++index) {\n      if (id === this._items[index].id) {\n        return index;\n      }\n    }\n\n    return -1;\n  }\n\n  insertItem(item) {\n    const index = this.itemIndex(item.id);\n\n    if (index > -1) {\n      this._items[index] = item;\n    } else {\n      this._items.push(item);\n    }\n  }\n\n  removeItem(id) {\n    const index = this.itemIndex(id);\n\n    if (index > -1) {\n      const item = this._items[index];\n\n      this._items.splice(index, 1);\n\n      return item;\n    }\n\n    return null;\n  }\n\n  createNewItem() {\n    const attributes = {\n      metadata: {\n        id: uuid.v4()\n      },\n      elements: [],\n      values: {}\n    };\n\n    return new this.ItemClass(this, attributes);\n  }\n}\n"],"file":"dynamic-value.js"}