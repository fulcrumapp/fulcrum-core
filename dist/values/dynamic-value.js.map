{"version":3,"file":"dynamic-value.js","names":["DynamicValue","element","items","_items","Array","isArray","item","push","ItemClass","format","part","isEmpty","map","_metadataJSON","_elementsJSON","values","toJSON","isEqual","value","contains","startsWith","isLessThan","length","NumberUtils","parseDouble","isGreaterThan","mapItems","callback","slice","itemIndex","id","index","insertItem","removeItem","splice","createNewItem","attributes","metadata","uuid","v4","elements","DynamicItemValue","key","MultipleValueItem","FormValue"],"sources":["../../src/values/dynamic-value.js"],"sourcesContent":["import FormValue from './form-value';\nimport DynamicItemValue from './dynamic-item-value';\nimport MultipleValueItem from './multiple-value-item';\nimport NumberUtils from '../utils/number-utils';\nimport uuid from 'uuid';\n\nexport default class DynamicValue extends FormValue {\n  constructor(element, items) {\n    super(element, items);\n\n    this._items = [];\n\n    if (Array.isArray(items)) {\n      for (const item of items) {\n        this._items.push(new this.ItemClass(this, item));\n      }\n    }\n  }\n\n  get ItemClass() {\n    return DynamicItemValue;\n  }\n\n  get isEmpty() {\n    return this._items.length === 0;\n  }\n\n  get searchableValue() {\n    return null;\n  }\n\n  get length() {\n    return this._items.length;\n  }\n\n  format({part = null}) {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    if (part === 'metadata') {\n      return this.items.map(item => item._metadataJSON);\n    } else if (part === 'elements') {\n      return this.items.map(item => item._elementsJSON);\n    }\n\n    return this.items.map(item => item.values.toJSON());\n  }\n\n  get columnValue() {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    const metadata = [];\n    const elements = [];\n    const values = [];\n\n    for (const item of this._items) {\n      metadata.push(item.metadata);\n      elements.push(item.elements);\n      values.push(item.values);\n    }\n\n    const value = {};\n\n    value['f' + this.element.key + '_metadata'] = metadata;\n    value['f' + this.element.key + '_elements'] = elements;\n    value['f' + this.element.key + '_values'] = values;\n\n    return value;\n  }\n\n  toJSON() {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    const items = [];\n\n    for (const item of this._items) {\n      items.push(item.toJSON());\n    }\n\n    return items;\n  }\n\n  get multipleValues() {\n    const items = [];\n\n    for (const item of this._items) {\n      items.push(new MultipleValueItem(this.element, item.values));\n    }\n\n    return items;\n  }\n\n  get displayValue() {\n    if (this.length === 1) {\n      return '1 item';\n    }\n\n    return `${this.length} items`;\n  }\n\n  isEqual(value) {\n    return false;\n  }\n\n  contains(value) {\n    return false;\n  }\n\n  startsWith(value) {\n    return false;\n  }\n\n  isLessThan(value) {\n    return this.length < NumberUtils.parseDouble(value);\n  }\n\n  isGreaterThan(value) {\n    return this.length > NumberUtils.parseDouble(value);\n  }\n\n  mapItems(callback) {\n    return this._items.slice().map(callback);\n  }\n\n  get items() {\n    return this._items.slice();\n  }\n\n  itemIndex(id) {\n    for (let index = 0; index < this._items.length; ++index) {\n      if (id === this._items[index].id) {\n        return index;\n      }\n    }\n\n    return -1;\n  }\n\n  insertItem(item) {\n    const index = this.itemIndex(item.id);\n\n    if (index > -1) {\n      this._items[index] = item;\n    } else {\n      this._items.push(item);\n    }\n  }\n\n  removeItem(id) {\n    const index = this.itemIndex(id);\n\n    if (index > -1) {\n      const item = this._items[index];\n\n      this._items.splice(index, 1);\n\n      return item;\n    }\n\n    return null;\n  }\n\n  createNewItem() {\n    const attributes = {\n      metadata: {\n        id: uuid.v4()\n      },\n      elements: [],\n      values: {}\n    };\n\n    return new this.ItemClass(this, attributes);\n  }\n}\n"],"mappings":"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"}