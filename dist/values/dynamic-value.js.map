{"version":3,"file":"dynamic-value.js","names":["DynamicValue","element","items","_items","Array","isArray","item","push","ItemClass","format","part","isEmpty","map","_metadataJSON","_elementsJSON","values","toJSON","isEqual","value","contains","startsWith","isLessThan","length","NumberUtils","parseDouble","isGreaterThan","mapItems","callback","slice","itemIndex","id","index","insertItem","removeItem","splice","createNewItem","attributes","metadata","uuid","v4","elements","DynamicItemValue","key","MultipleValueItem","FormValue"],"sources":["../../src/values/dynamic-value.js"],"sourcesContent":["import FormValue from './form-value';\nimport DynamicItemValue from './dynamic-item-value';\nimport MultipleValueItem from './multiple-value-item';\nimport NumberUtils from '../utils/number-utils';\nimport uuid from 'uuid';\n\nexport default class DynamicValue extends FormValue {\n  constructor(element, items) {\n    super(element, items);\n\n    this._items = [];\n\n    if (Array.isArray(items)) {\n      for (const item of items) {\n        this._items.push(new this.ItemClass(this, item));\n      }\n    }\n  }\n\n  get ItemClass() {\n    return DynamicItemValue;\n  }\n\n  get isEmpty() {\n    return this._items.length === 0;\n  }\n\n  get searchableValue() {\n    return null;\n  }\n\n  get length() {\n    return this._items.length;\n  }\n\n  format({part = null}) {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    if (part === 'metadata') {\n      return this.items.map(item => item._metadataJSON);\n    } else if (part === 'elements') {\n      return this.items.map(item => item._elementsJSON);\n    }\n\n    return this.items.map(item => item.values.toJSON());\n  }\n\n  get columnValue() {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    const metadata = [];\n    const elements = [];\n    const values = [];\n\n    for (const item of this._items) {\n      metadata.push(item.metadata);\n      elements.push(item.elements);\n      values.push(item.values);\n    }\n\n    const value = {};\n\n    value['f' + this.element.key + '_metadata'] = metadata;\n    value['f' + this.element.key + '_elements'] = elements;\n    value['f' + this.element.key + '_values'] = values;\n\n    return value;\n  }\n\n  toJSON() {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    const items = [];\n\n    for (const item of this._items) {\n      items.push(item.toJSON());\n    }\n\n    return items;\n  }\n\n  get multipleValues() {\n    const items = [];\n\n    for (const item of this._items) {\n      items.push(new MultipleValueItem(this.element, item.values));\n    }\n\n    return items;\n  }\n\n  get displayValue() {\n    if (this.length === 1) {\n      return '1 item';\n    }\n\n    return `${this.length} items`;\n  }\n\n  isEqual(value) {\n    return false;\n  }\n\n  contains(value) {\n    return false;\n  }\n\n  startsWith(value) {\n    return false;\n  }\n\n  isLessThan(value) {\n    return this.length < NumberUtils.parseDouble(value);\n  }\n\n  isGreaterThan(value) {\n    return this.length > NumberUtils.parseDouble(value);\n  }\n\n  mapItems(callback) {\n    return this._items.slice().map(callback);\n  }\n\n  get items() {\n    return this._items.slice();\n  }\n\n  itemIndex(id) {\n    for (let index = 0; index < this._items.length; ++index) {\n      if (id === this._items[index].id) {\n        return index;\n      }\n    }\n\n    return -1;\n  }\n\n  insertItem(item) {\n    const index = this.itemIndex(item.id);\n\n    if (index > -1) {\n      this._items[index] = item;\n    } else {\n      this._items.push(item);\n    }\n  }\n\n  removeItem(id) {\n    const index = this.itemIndex(id);\n\n    if (index > -1) {\n      const item = this._items[index];\n\n      this._items.splice(index, 1);\n\n      return item;\n    }\n\n    return null;\n  }\n\n  createNewItem() {\n    const attributes = {\n      metadata: {\n        id: uuid.v4()\n      },\n      elements: [],\n      values: {}\n    };\n\n    return new this.ItemClass(this, attributes);\n  }\n}\n"],"mappings":"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"}