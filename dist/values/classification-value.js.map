{"version":3,"file":"classification-value.js","names":["DisplaySeparator","SearchSeparator","ClassificationValue","element","attributes","_choiceValues","_otherValues","choice_values","choice","TextUtils","isPresent","push","other_values","isEqual","value","classification","selectedClassification","choiceValues","toJSON","ESCAPED","parts","replace","split","map","part","allMatchSoFar","partIndex","length","toLowerCase","contains","startsWith","format","useDisplayValue","isEmpty","labelStrings","valueStrings","slice","otherValues","toSimpleJSON","labels","strings","setSelectedClassification","otherValue","Classification","setSelectedClassificationJSON","classificationAsJSON","toString","exploded","item","label","hasOtherValue","values","join","allValues","result","currentClassifications","classificationItems","classificationValue","trim","items","FormValue"],"sources":["../../src/values/classification-value.js"],"sourcesContent":["import FormValue from './form-value';\nimport TextUtils from '../utils/text-utils';\nimport Classification from '../elements/classification';\n\nconst DisplaySeparator = ' â–¸ ';\n\nconst SearchSeparator = ' ';\n\nexport default class ClassificationValue extends FormValue {\n  constructor(element, attributes) {\n    super(element, attributes);\n\n    this._choiceValues = [];\n    this._otherValues = [];\n\n    if (attributes) {\n      if (attributes.choice_values) {\n        for (const choice of attributes.choice_values) {\n          if (TextUtils.isPresent(choice)) {\n            this._choiceValues.push(choice);\n          }\n        }\n      }\n\n      if (attributes.other_values) {\n        for (const choice of attributes.other_values) {\n          if (TextUtils.isPresent(choice)) {\n            this._otherValues.push(choice);\n          }\n        }\n      }\n    }\n  }\n\n  get isEmpty() {\n    if (this._choiceValues.length) {\n      return false;\n    }\n\n    if (this._otherValues.length) {\n      return false;\n    }\n\n    return true;\n  }\n\n  isEqual(value) {\n    const classification = this.selectedClassification;\n\n    const choiceValues = classification ? classification.toJSON() : null;\n\n    const ESCAPED = /\\\\,/g;\n\n    const parts = value.replace(ESCAPED, '\\t\\t').split(',').map(part => part.replace(/\\t\\t/g, ','));\n\n    let allMatchSoFar = false;\n\n    let partIndex = 0;\n\n    for (const part of parts) {\n      if (part != null && choiceValues && partIndex < choiceValues.length &&\n          choiceValues[partIndex].toLowerCase() === part.replace(ESCAPED, ',').toLowerCase()) {\n        allMatchSoFar = true;\n      } else {\n        allMatchSoFar = false;\n        break;\n      }\n\n      ++partIndex;\n    }\n\n    return allMatchSoFar;\n  }\n\n  contains(value) {\n    return this.isEqual(value);\n  }\n\n  startsWith(value) {\n    return this.contains(value);\n  }\n\n  get labelStrings() {\n    const labels = [];\n\n    const classification = this.selectedClassification;\n\n    if (classification) {\n      for (const item of classification.exploded) {\n        if (item.label) {\n          labels.push(item.label);\n        }\n      }\n    }\n\n    if (this.hasOtherValue) {\n      labels.push(this.otherValue);\n    }\n\n    return labels;\n  }\n\n  get valueStrings() {\n    const values = [];\n\n    for (const value of this._choiceValues) {\n      values.push(value);\n    }\n\n    for (const value of this._otherValues) {\n      values.push(value);\n    }\n\n    return values;\n  }\n\n  get displayValue() {\n    // When a classification entry has been removed but this record still has\n    // the value associated with the removed entry, just show the raw value.\n    if (this.labelStrings.length === 0) {\n      return this.valueStrings.join(DisplaySeparator);\n    }\n\n    return this.labelStrings.join(DisplaySeparator);\n  }\n\n  get searchableValue() {\n    const values = [];\n\n    const classification = this.selectedClassification;\n\n    if (classification) {\n      for (const item of classification.exploded) {\n        if (item.label) {\n          values.push(item.label);\n        }\n\n        if (item.value && item.value !== item.label) {\n          values.push(item.value);\n        }\n      }\n    }\n\n    if (this.hasOtherValue) {\n      values.push(this.otherValue);\n    }\n\n    return values.join(SearchSeparator);\n  }\n\n  format({useDisplayValue = false}) {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    return useDisplayValue && this.labelStrings.length > 0 ? this.labelStrings : this.valueStrings;\n  }\n\n  get length() {\n    return this._choiceValues.length + this._otherValues.length;\n  }\n\n  toJSON() {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    const choiceValues = this._choiceValues.slice();\n    const otherValues = this._otherValues.slice();\n\n    return {\n      choice_values: choiceValues,\n      other_values: otherValues\n    };\n  }\n\n  toSimpleJSON({labels} = {}) {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    const strings = labels ? this.labelStrings : this.valueStrings;\n\n    return strings;\n  }\n\n  get columnValue() {\n    const allValues = this.valueStrings;\n\n    if (allValues.length === 0) {\n      return null;\n    }\n\n    return allValues;\n  }\n\n  get multipleValues() {\n    return null;\n  }\n\n  get hasOtherValue() {\n    return this._otherValues.length !== 0;\n  }\n\n  get otherValue() {\n    if (!this.hasOtherValue) {\n      return null;\n    }\n\n    return this._otherValues[0];\n  }\n\n  set otherValue(value) {\n    if (value && value.length) {\n      this._otherValues = [ value ];\n    } else {\n      this._otherValues = [];\n    }\n  }\n\n  get selectedClassification() {\n    let result = null;\n\n    if (this._choiceValues.length === 0) {\n      return null;\n    }\n\n    let currentClassifications = this.element.classificationItems;\n\n    for (const classificationValue of this._choiceValues) {\n      for (const classification of currentClassifications) {\n        if (TextUtils.trim(classification.value) === TextUtils.trim(classificationValue)) {\n          result = classification;\n          currentClassifications = classification.items;\n          break;\n        }\n      }\n    }\n\n    return result;\n  }\n\n  setSelectedClassification(classification, otherValue) {\n    if (classification instanceof Classification) {\n      this.setSelectedClassificationJSON(classification.toJSON(), otherValue);\n    } else {\n      this.setSelectedClassificationJSON(null, otherValue);\n    }\n  }\n\n  setSelectedClassificationJSON(classificationAsJSON, otherValue) {\n    if (classificationAsJSON && classificationAsJSON.length) {\n      this._choiceValues = classificationAsJSON;\n    } else {\n      this._choiceValues = [];\n    }\n\n    if (otherValue) {\n      this._otherValues = [ otherValue.toString() ];\n    } else {\n      this._otherValues = [];\n    }\n  }\n}\n"],"mappings":"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"}