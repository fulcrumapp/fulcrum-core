{"version":3,"file":"classification-value.js","names":["DisplaySeparator","SearchSeparator","ClassificationValue","element","attributes","_choiceValues","_otherValues","choice_values","choice","TextUtils","isPresent","push","other_values","isEqual","value","classification","selectedClassification","choiceValues","toJSON","ESCAPED","parts","replace","split","map","part","allMatchSoFar","partIndex","length","toLowerCase","contains","startsWith","format","useDisplayValue","isEmpty","labelStrings","valueStrings","slice","otherValues","toSimpleJSON","labels","strings","setSelectedClassification","otherValue","Classification","setSelectedClassificationJSON","classificationAsJSON","toString","exploded","item","label","hasOtherValue","values","join","allValues","result","currentClassifications","classificationItems","classificationValue","trim","items","FormValue"],"sources":["../../src/values/classification-value.js"],"sourcesContent":["import FormValue from './form-value';\nimport TextUtils from '../utils/text-utils';\nimport Classification from '../elements/classification';\n\nconst DisplaySeparator = ' â–¸ ';\n\nconst SearchSeparator = ' ';\n\nexport default class ClassificationValue extends FormValue {\n  constructor(element, attributes) {\n    super(element, attributes);\n\n    this._choiceValues = [];\n    this._otherValues = [];\n\n    if (attributes) {\n      if (attributes.choice_values) {\n        for (const choice of attributes.choice_values) {\n          if (TextUtils.isPresent(choice)) {\n            this._choiceValues.push(choice);\n          }\n        }\n      }\n\n      if (attributes.other_values) {\n        for (const choice of attributes.other_values) {\n          if (TextUtils.isPresent(choice)) {\n            this._otherValues.push(choice);\n          }\n        }\n      }\n    }\n  }\n\n  get isEmpty() {\n    if (this._choiceValues.length) {\n      return false;\n    }\n\n    if (this._otherValues.length) {\n      return false;\n    }\n\n    return true;\n  }\n\n  isEqual(value) {\n    const classification = this.selectedClassification;\n\n    const choiceValues = classification ? classification.toJSON() : null;\n\n    const ESCAPED = /\\\\,/g;\n\n    const parts = value.replace(ESCAPED, '\\t\\t').split(',').map(part => part.replace(/\\t\\t/g, ','));\n\n    let allMatchSoFar = false;\n\n    let partIndex = 0;\n\n    for (const part of parts) {\n      if (part != null && choiceValues && partIndex < choiceValues.length &&\n          choiceValues[partIndex].toLowerCase() === part.replace(ESCAPED, ',').toLowerCase()) {\n        allMatchSoFar = true;\n      } else {\n        allMatchSoFar = false;\n        break;\n      }\n\n      ++partIndex;\n    }\n\n    return allMatchSoFar;\n  }\n\n  contains(value) {\n    return this.isEqual(value);\n  }\n\n  startsWith(value) {\n    return this.contains(value);\n  }\n\n  get labelStrings() {\n    const labels = [];\n\n    const classification = this.selectedClassification;\n\n    if (classification) {\n      for (const item of classification.exploded) {\n        if (item.label) {\n          labels.push(item.label);\n        }\n      }\n    }\n\n    if (this.hasOtherValue) {\n      labels.push(this.otherValue);\n    }\n\n    return labels;\n  }\n\n  get valueStrings() {\n    const values = [];\n\n    for (const value of this._choiceValues) {\n      values.push(value);\n    }\n\n    for (const value of this._otherValues) {\n      values.push(value);\n    }\n\n    return values;\n  }\n\n  get displayValue() {\n    // When a classification entry has been removed but this record still has\n    // the value associated with the removed entry, just show the raw value.\n    if (this.labelStrings.length === 0) {\n      return this.valueStrings.join(DisplaySeparator);\n    }\n\n    return this.labelStrings.join(DisplaySeparator);\n  }\n\n  get searchableValue() {\n    const values = [];\n\n    const classification = this.selectedClassification;\n\n    if (classification) {\n      for (const item of classification.exploded) {\n        if (item.label) {\n          values.push(item.label);\n        }\n\n        if (item.value && item.value !== item.label) {\n          values.push(item.value);\n        }\n      }\n    }\n\n    if (this.hasOtherValue) {\n      values.push(this.otherValue);\n    }\n\n    return values.join(SearchSeparator);\n  }\n\n  format({useDisplayValue = false}) {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    return useDisplayValue && this.labelStrings.length > 0 ? this.labelStrings : this.valueStrings;\n  }\n\n  get length() {\n    return this._choiceValues.length + this._otherValues.length;\n  }\n\n  toJSON() {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    const choiceValues = this._choiceValues.slice();\n    const otherValues = this._otherValues.slice();\n\n    return {\n      choice_values: choiceValues,\n      other_values: otherValues\n    };\n  }\n\n  toSimpleJSON({labels} = {}) {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    const strings = labels ? this.labelStrings : this.valueStrings;\n\n    return strings;\n  }\n\n  get columnValue() {\n    const allValues = this.valueStrings;\n\n    if (allValues.length === 0) {\n      return null;\n    }\n\n    return allValues;\n  }\n\n  get multipleValues() {\n    return null;\n  }\n\n  get hasOtherValue() {\n    return this._otherValues.length !== 0;\n  }\n\n  get otherValue() {\n    if (!this.hasOtherValue) {\n      return null;\n    }\n\n    return this._otherValues[0];\n  }\n\n  set otherValue(value) {\n    if (value && value.length) {\n      this._otherValues = [ value ];\n    } else {\n      this._otherValues = [];\n    }\n  }\n\n  get selectedClassification() {\n    let result = null;\n\n    if (this._choiceValues.length === 0) {\n      return null;\n    }\n\n    let currentClassifications = this.element.classificationItems;\n\n    for (const classificationValue of this._choiceValues) {\n      for (const classification of currentClassifications) {\n        if (TextUtils.trim(classification.value) === TextUtils.trim(classificationValue)) {\n          result = classification;\n          currentClassifications = classification.items;\n          break;\n        }\n      }\n    }\n\n    return result;\n  }\n\n  setSelectedClassification(classification, otherValue) {\n    if (classification instanceof Classification) {\n      this.setSelectedClassificationJSON(classification.toJSON(), otherValue);\n    } else {\n      this.setSelectedClassificationJSON(null, otherValue);\n    }\n  }\n\n  setSelectedClassificationJSON(classificationAsJSON, otherValue) {\n    if (classificationAsJSON && classificationAsJSON.length) {\n      this._choiceValues = classificationAsJSON;\n    } else {\n      this._choiceValues = [];\n    }\n\n    if (otherValue) {\n      this._otherValues = [ otherValue.toString() ];\n    } else {\n      this._otherValues = [];\n    }\n  }\n}\n"],"mappings":"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"}