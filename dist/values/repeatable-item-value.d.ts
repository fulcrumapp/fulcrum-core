export default class RepeatableItemValue extends Feature {
    constructor(element: any, attrs: any, index: any);
    _index: any;
    _element: any;
    get isRecord(): boolean;
    get isRepeatable(): boolean;
    get element(): any;
    get id(): any;
    get index(): any;
    set createdAt(arg: any);
    get createdAt(): any;
    get version(): any;
    _createdAt: any;
    set updatedAt(arg: any);
    get updatedAt(): any;
    _updatedAt: any;
    get formValues(): FormValues;
    _formValues: FormValues | undefined;
    set geometry(arg: any);
    get geometry(): any;
    _geometry: any;
    _latitude: any;
    _longitude: any;
    get hasCoordinate(): boolean;
    get hasLocation(): boolean;
    updateFromAPIAttributes(attrs: any): void;
    _id: any;
    _formValuesJSON: any;
    _version: any;
    _changesetID: any;
    _recordID: any;
    _parentID: any;
    _recordProjectID: any;
    _recordProjectName: any;
    _recordAssignedToID: any;
    _recordAssignedToName: any;
    _recordStatus: any;
    _createdByID: any;
    _createdByName: any;
    _updatedByID: any;
    _updatedByName: any;
    _createdDuration: any;
    _updatedDuration: any;
    _editedDuration: any;
    _createdLatitude: any;
    _createdLongitude: any;
    _createdAltitude: any;
    _createdAccuracy: any;
    _updatedLatitude: any;
    _updatedLongitude: any;
    _updatedAltitude: any;
    _updatedAccuracy: any;
    toJSON({ simple }?: {
        simple: any;
    }): {
        id: any;
        created_at: string | null;
        updated_at: string | null;
        form_values: {};
        geometry: any;
        created_location: {
            latitude: any;
            longitude: any;
            altitude: any;
            horizontal_accuracy: any;
        } | null;
        updated_location: {
            latitude: any;
            longitude: any;
            altitude: any;
            horizontal_accuracy: any;
        } | null;
        created_duration: any;
        updated_duration: any;
        edited_duration: any;
        created_by_id: any;
        updated_by_id: any;
        version: any;
        changeset_id: any;
    };
    updateTimestamps(): void;
    get isGeometryEnabled(): any;
    get displayValue(): string;
    get searchableValue(): string;
    get geometryAsGeoJSON(): any;
    set latitude(arg: any);
    get latitude(): any;
    set longitude(arg: any);
    get longitude(): any;
    get changesetID(): any;
    get createdByID(): any;
    get updatedByID(): any;
    loadChangeset(dataSource: any, callback: any): void;
    loadCreatedBy(dataSource: any, callback: any): void;
    loadUpdatedBy(dataSource: any, callback: any): void;
    get changeset(): any;
    get updatedBy(): any;
    get createdBy(): any;
    set createdDuration(arg: any);
    get createdDuration(): any;
    set updatedDuration(arg: any);
    get updatedDuration(): any;
    set editedDuration(arg: any);
    get editedDuration(): any;
    set createdLatitude(arg: any);
    get createdLatitude(): any;
    set createdLongitude(arg: any);
    get createdLongitude(): any;
    set createdAltitude(arg: any);
    get createdAltitude(): any;
    set createdAccuracy(arg: any);
    get createdAccuracy(): any;
    set updatedLatitude(arg: any);
    get updatedLatitude(): any;
    set updatedLongitude(arg: any);
    get updatedLongitude(): any;
    set updatedAltitude(arg: any);
    get updatedAltitude(): any;
    set updatedAccuracy(arg: any);
    get updatedAccuracy(): any;
    get hasCreatedCoordinate(): boolean;
    get hasUpdatedCoordinate(): boolean;
    get createdLocation(): {
        latitude: any;
        longitude: any;
        altitude: any;
        horizontal_accuracy: any;
    } | null;
    get updatedLocation(): {
        latitude: any;
        longitude: any;
        altitude: any;
        horizontal_accuracy: any;
    } | null;
    get recordID(): any;
    get parentID(): any;
    set createdByName(arg: any);
    get createdByName(): any;
    set updatedByName(arg: any);
    get updatedByName(): any;
    set recordProjectName(arg: any);
    get recordProjectName(): any;
    set recordProjectID(arg: any);
    get recordProjectID(): any;
    set recordAssignedToName(arg: any);
    get recordAssignedToName(): any;
    set recordAssignedToID(arg: any);
    get recordAssignedToID(): any;
    get recordStatus(): any;
}
import Feature from "../feature";
import FormValues from "./form-values";
