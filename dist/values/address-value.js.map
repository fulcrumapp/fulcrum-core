{"version":3,"file":"address-value.js","names":["AddressValue","element","attributes","address","Address","format","part","isEmpty","toJSON","searchableValue","isEqual","stringValue","contains","startsWith","isLessThan","isGreaterThan","lines","join","displayValue","length","value","Object","keys","key","FormValue"],"sources":["../../src/values/address-value.js"],"sourcesContent":["import FormValue from './form-value';\nimport Address from './address';\n\nexport default class AddressValue extends FormValue {\n  constructor(element, attributes) {\n    super(element);\n\n    this.address = new Address(attributes);\n  }\n\n  get isEmpty() {\n    return this.address.isEmpty;\n  }\n\n  get displayValue() {\n    return this.address.lines.join('\\n');\n  }\n\n  get searchableValue() {\n    return this.address.lines.join(' ');\n  }\n\n  get length() {\n    return this.displayValue.length;\n  }\n\n  get columnValue() {\n    const value = {};\n\n    const address = this.address.toJSON();\n\n    for (const key of Object.keys(address)) {\n      value['f' + this.element.key + '_' + key] = address[key];\n    }\n\n    value['f' + this.element.key] = this.searchableValue;\n\n    return value;\n  }\n\n  get multipleValues() {\n    return null;\n    // TODO(zhm) implement\n    // throw new Error('Not implemented');\n  }\n\n  format({part = null}) {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    if (part) {\n      return this.address.toJSON()[part];\n    }\n\n    return this.searchableValue;\n  }\n\n  toJSON() {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    return this.address.toJSON();\n  }\n\n  isEqual(stringValue) {\n    return false;\n  }\n\n  contains(stringValue) {\n    return false;\n  }\n\n  startsWith(stringValue) {\n    return false;\n  }\n\n  isLessThan(stringValue) {\n    return false;\n  }\n\n  isGreaterThan(stringValue) {\n    return false;\n  }\n}\n"],"mappings":";;;;;AAAA;;AACA;;;;;;;;;;;;IAEqBA,Y;;;EACnB,sBAAYC,OAAZ,EAAqBC,UAArB,EAAiC;IAAA;;IAC/B,8BAAMD,OAAN;IAEA,MAAKE,OAAL,GAAe,IAAIC,mBAAJ,CAAYF,UAAZ,CAAf;IAH+B;EAIhC;;;;SAsCDG,M,GAAA,sBAAsB;IAAA,qBAAdC,IAAc;IAAA,IAAdA,IAAc,0BAAP,IAAO;;IACpB,IAAI,KAAKC,OAAT,EAAkB;MAChB,OAAO,IAAP;IACD;;IAED,IAAID,IAAJ,EAAU;MACR,OAAO,KAAKH,OAAL,CAAaK,MAAb,GAAsBF,IAAtB,CAAP;IACD;;IAED,OAAO,KAAKG,eAAZ;EACD,C;;SAEDD,M,GAAA,kBAAS;IACP,IAAI,KAAKD,OAAT,EAAkB;MAChB,OAAO,IAAP;IACD;;IAED,OAAO,KAAKJ,OAAL,CAAaK,MAAb,EAAP;EACD,C;;SAEDE,O,GAAA,iBAAQC,WAAR,EAAqB;IACnB,OAAO,KAAP;EACD,C;;SAEDC,Q,GAAA,kBAASD,WAAT,EAAsB;IACpB,OAAO,KAAP;EACD,C;;SAEDE,U,GAAA,oBAAWF,WAAX,EAAwB;IACtB,OAAO,KAAP;EACD,C;;SAEDG,U,GAAA,oBAAWH,WAAX,EAAwB;IACtB,OAAO,KAAP;EACD,C;;SAEDI,a,GAAA,uBAAcJ,WAAd,EAA2B;IACzB,OAAO,KAAP;EACD,C;;;;SA1ED,eAAc;MACZ,OAAO,KAAKR,OAAL,CAAaI,OAApB;IACD;;;SAED,eAAmB;MACjB,OAAO,KAAKJ,OAAL,CAAaa,KAAb,CAAmBC,IAAnB,CAAwB,IAAxB,CAAP;IACD;;;SAED,eAAsB;MACpB,OAAO,KAAKd,OAAL,CAAaa,KAAb,CAAmBC,IAAnB,CAAwB,GAAxB,CAAP;IACD;;;SAED,eAAa;MACX,OAAO,KAAKC,YAAL,CAAkBC,MAAzB;IACD;;;SAED,eAAkB;MAChB,IAAMC,KAAK,GAAG,EAAd;MAEA,IAAMjB,OAAO,GAAG,KAAKA,OAAL,CAAaK,MAAb,EAAhB;;MAEA,gCAAkBa,MAAM,CAACC,IAAP,CAAYnB,OAAZ,CAAlB,kCAAwC;QAAnC,IAAMoB,GAAG,mBAAT;QACHH,KAAK,CAAC,MAAM,KAAKnB,OAAL,CAAasB,GAAnB,GAAyB,GAAzB,GAA+BA,GAAhC,CAAL,GAA4CpB,OAAO,CAACoB,GAAD,CAAnD;MACD;;MAEDH,KAAK,CAAC,MAAM,KAAKnB,OAAL,CAAasB,GAApB,CAAL,GAAgC,KAAKd,eAArC;MAEA,OAAOW,KAAP;IACD;;;SAED,eAAqB;MACnB,OAAO,IAAP,CADmB,CAEnB;MACA;IACD;;;;EAzCuCI,qB"}