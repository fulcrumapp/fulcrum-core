{"version":3,"file":"address-value.js","names":["AddressValue","element","attributes","address","Address","format","part","isEmpty","toJSON","searchableValue","isEqual","stringValue","contains","startsWith","isLessThan","isGreaterThan","lines","join","displayValue","length","value","Object","keys","key","FormValue"],"sources":["../../src/values/address-value.js"],"sourcesContent":["import FormValue from './form-value';\nimport Address from './address';\n\nexport default class AddressValue extends FormValue {\n  constructor(element, attributes) {\n    super(element);\n\n    this.address = new Address(attributes);\n  }\n\n  get isEmpty() {\n    return this.address.isEmpty;\n  }\n\n  get displayValue() {\n    return this.address.lines.join('\\n');\n  }\n\n  get searchableValue() {\n    return this.address.lines.join(' ');\n  }\n\n  get length() {\n    return this.displayValue.length;\n  }\n\n  get columnValue() {\n    const value = {};\n\n    const address = this.address.toJSON();\n\n    for (const key of Object.keys(address)) {\n      value['f' + this.element.key + '_' + key] = address[key];\n    }\n\n    value['f' + this.element.key] = this.searchableValue;\n\n    return value;\n  }\n\n  get multipleValues() {\n    return null;\n    // TODO(zhm) implement\n    // throw new Error('Not implemented');\n  }\n\n  format({part = null}) {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    if (part) {\n      return this.address.toJSON()[part];\n    }\n\n    return this.searchableValue;\n  }\n\n  toJSON() {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    return this.address.toJSON();\n  }\n\n  isEqual(stringValue) {\n    return false;\n  }\n\n  contains(stringValue) {\n    return false;\n  }\n\n  startsWith(stringValue) {\n    return false;\n  }\n\n  isLessThan(stringValue) {\n    return false;\n  }\n\n  isGreaterThan(stringValue) {\n    return false;\n  }\n}\n"],"mappings":";;;;AAAA;AACA;AAAgC;AAAA;AAAA;AAAA;AAAA;AAAA,IAEXA,YAAY;EAAA;EAC/B,sBAAYC,OAAO,EAAEC,UAAU,EAAE;IAAA;IAC/B,8BAAMD,OAAO,CAAC;IAEd,MAAKE,OAAO,GAAG,IAAIC,mBAAO,CAACF,UAAU,CAAC;IAAC;EACzC;EAAC;EAAA,OAsCDG,MAAM,GAAN,sBAAsB;IAAA,qBAAdC,IAAI;MAAJA,IAAI,0BAAG,IAAI;IACjB,IAAI,IAAI,CAACC,OAAO,EAAE;MAChB,OAAO,IAAI;IACb;IAEA,IAAID,IAAI,EAAE;MACR,OAAO,IAAI,CAACH,OAAO,CAACK,MAAM,EAAE,CAACF,IAAI,CAAC;IACpC;IAEA,OAAO,IAAI,CAACG,eAAe;EAC7B,CAAC;EAAA,OAEDD,MAAM,GAAN,kBAAS;IACP,IAAI,IAAI,CAACD,OAAO,EAAE;MAChB,OAAO,IAAI;IACb;IAEA,OAAO,IAAI,CAACJ,OAAO,CAACK,MAAM,EAAE;EAC9B,CAAC;EAAA,OAEDE,OAAO,GAAP,iBAAQC,WAAW,EAAE;IACnB,OAAO,KAAK;EACd,CAAC;EAAA,OAEDC,QAAQ,GAAR,kBAASD,WAAW,EAAE;IACpB,OAAO,KAAK;EACd,CAAC;EAAA,OAEDE,UAAU,GAAV,oBAAWF,WAAW,EAAE;IACtB,OAAO,KAAK;EACd,CAAC;EAAA,OAEDG,UAAU,GAAV,oBAAWH,WAAW,EAAE;IACtB,OAAO,KAAK;EACd,CAAC;EAAA,OAEDI,aAAa,GAAb,uBAAcJ,WAAW,EAAE;IACzB,OAAO,KAAK;EACd,CAAC;EAAA;IAAA;IAAA,KA1ED,eAAc;MACZ,OAAO,IAAI,CAACR,OAAO,CAACI,OAAO;IAC7B;EAAC;IAAA;IAAA,KAED,eAAmB;MACjB,OAAO,IAAI,CAACJ,OAAO,CAACa,KAAK,CAACC,IAAI,CAAC,IAAI,CAAC;IACtC;EAAC;IAAA;IAAA,KAED,eAAsB;MACpB,OAAO,IAAI,CAACd,OAAO,CAACa,KAAK,CAACC,IAAI,CAAC,GAAG,CAAC;IACrC;EAAC;IAAA;IAAA,KAED,eAAa;MACX,OAAO,IAAI,CAACC,YAAY,CAACC,MAAM;IACjC;EAAC;IAAA;IAAA,KAED,eAAkB;MAChB,IAAMC,KAAK,GAAG,CAAC,CAAC;MAEhB,IAAMjB,OAAO,GAAG,IAAI,CAACA,OAAO,CAACK,MAAM,EAAE;MAErC,gCAAkBa,MAAM,CAACC,IAAI,CAACnB,OAAO,CAAC,kCAAE;QAAnC,IAAMoB,GAAG;QACZH,KAAK,CAAC,GAAG,GAAG,IAAI,CAACnB,OAAO,CAACsB,GAAG,GAAG,GAAG,GAAGA,GAAG,CAAC,GAAGpB,OAAO,CAACoB,GAAG,CAAC;MAC1D;MAEAH,KAAK,CAAC,GAAG,GAAG,IAAI,CAACnB,OAAO,CAACsB,GAAG,CAAC,GAAG,IAAI,CAACd,eAAe;MAEpD,OAAOW,KAAK;IACd;EAAC;IAAA;IAAA,KAED,eAAqB;MACnB,OAAO,IAAI;MACX;MACA;IACF;EAAC;EAAA;AAAA,EAzCuCI,qBAAS;AAAA"}