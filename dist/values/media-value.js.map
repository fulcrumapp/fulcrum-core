{"version":3,"file":"media-value.js","names":["MediaValue","element","items","_items","Array","isArray","item","push","ItemClass","format","part","formatMediaURL","formatMediaViewerURL","formatMediaName","args","isEmpty","map","caption","mediaID","toJSON","isEqual","value","contains","startsWith","isLessThan","length","NumberUtils","parseDouble","isGreaterThan","mapItems","callback","slice","addItem","id","removeItem","index","splice","ids","TextUtils","isPresent","join","captions","key","MultipleValueItem","FormValue"],"sources":["../../src/values/media-value.js"],"sourcesContent":["import FormValue from './form-value';\nimport MultipleValueItem from './multiple-value-item';\nimport TextUtils from '../utils/text-utils';\nimport NumberUtils from '../utils/number-utils';\n\nexport default class MediaValue extends FormValue {\n  constructor(element, items) {\n    super(element, items);\n\n    this._items = [];\n\n    if (Array.isArray(items)) {\n      for (const item of items) {\n        this._items.push(new this.ItemClass(this, item));\n      }\n    }\n  }\n\n  get isEmpty() {\n    return this._items.length === 0;\n  }\n\n  get searchableValue() {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    const ids = [];\n\n    for (const item of this._items) {\n      if (TextUtils.isPresent(item.caption)) {\n        ids.push(item.caption);\n      }\n    }\n\n    return ids.join(' ');\n  }\n\n  get length() {\n    return this._items.length;\n  }\n\n  format({part = null, formatMediaURL, formatMediaViewerURL, formatMediaName, ...args}) {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    if (part === 'captions') {\n      return this.items.map(item => item.caption);\n    } else if (part === 'view' && formatMediaViewerURL) {\n      return formatMediaViewerURL(this, args);\n    } else if (part === 'urls' && formatMediaURL) {\n      return this.items.map(item => formatMediaURL(item, args));\n    } else if (part === 'name' && formatMediaName) {\n      return this.items.map(item => formatMediaName(item, args));\n    }\n\n    return this.items.map(item => item.mediaID);\n  }\n\n  get columnValue() {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    const ids = [];\n    const captions = [];\n\n    for (const item of this._items) {\n      ids.push(item.mediaID);\n      captions.push(item.caption);\n    }\n\n    const value = {};\n\n    value['f' + this.element.key + '_captions'] = captions;\n    value['f' + this.element.key] = ids;\n\n    return value;\n  }\n\n  get multipleValues() {\n    const items = [];\n\n    for (const item of this._items) {\n      items.push(new MultipleValueItem(this.element, item.mediaID));\n    }\n\n    return items;\n  }\n\n  toJSON() {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    const items = [];\n\n    for (const item of this._items) {\n      items.push(item.toJSON());\n    }\n\n    return items;\n  }\n\n  isEqual(value) {\n    return false;\n  }\n\n  contains(value) {\n    return false;\n  }\n\n  startsWith(value) {\n    return false;\n  }\n\n  isLessThan(value) {\n    return this.length < NumberUtils.parseDouble(value);\n  }\n\n  isGreaterThan(value) {\n    return this.length > NumberUtils.parseDouble(value);\n  }\n\n  mapItems(callback) {\n    return this._items.slice().map(callback);\n  }\n\n  addItem(id, caption) {\n    const item = new this.ItemClass(this, { caption: caption });\n\n    item.mediaID = id;\n\n    this._items.push(item);\n\n    return item;\n  }\n\n  removeItem(id) {\n    for (let index = 0; index < this._items.length; ++index) {\n      if (this._items[index].mediaID === id) {\n        const item = this._items[index];\n\n        this._items.splice(index, 1);\n\n        return item;\n      }\n    }\n\n    return null;\n  }\n\n  get hasCaptions() {\n    for (const item of this._items) {\n      if (TextUtils.isPresent(item.caption)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  // return a copy until it's determined that a mutable API is necessary\n  get items() {\n    return this._items.slice();\n  }\n}\n"],"mappings":"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"}