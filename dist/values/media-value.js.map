{"version":3,"file":"media-value.js","names":["MediaValue","element","items","_items","Array","isArray","item","push","ItemClass","format","part","formatMediaURL","formatMediaViewerURL","formatMediaName","args","isEmpty","map","caption","mediaID","toJSON","isEqual","value","contains","startsWith","isLessThan","length","NumberUtils","parseDouble","isGreaterThan","mapItems","callback","slice","addItem","id","removeItem","index","splice","ids","TextUtils","isPresent","join","captions","key","MultipleValueItem","FormValue"],"sources":["../../src/values/media-value.js"],"sourcesContent":["import FormValue from './form-value';\nimport MultipleValueItem from './multiple-value-item';\nimport TextUtils from '../utils/text-utils';\nimport NumberUtils from '../utils/number-utils';\n\nexport default class MediaValue extends FormValue {\n  constructor(element, items) {\n    super(element, items);\n\n    this._items = [];\n\n    if (Array.isArray(items)) {\n      for (const item of items) {\n        this._items.push(new this.ItemClass(this, item));\n      }\n    }\n  }\n\n  get isEmpty() {\n    return this._items.length === 0;\n  }\n\n  get searchableValue() {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    const ids = [];\n\n    for (const item of this._items) {\n      if (TextUtils.isPresent(item.caption)) {\n        ids.push(item.caption);\n      }\n    }\n\n    return ids.join(' ');\n  }\n\n  get length() {\n    return this._items.length;\n  }\n\n  format({part = null, formatMediaURL, formatMediaViewerURL, formatMediaName, ...args}) {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    if (part === 'captions') {\n      return this.items.map(item => item.caption);\n    } else if (part === 'view' && formatMediaViewerURL) {\n      return formatMediaViewerURL(this, args);\n    } else if (part === 'urls' && formatMediaURL) {\n      return this.items.map(item => formatMediaURL(item, args));\n    } else if (part === 'name' && formatMediaName) {\n      return this.items.map(item => formatMediaName(item, args));\n    }\n\n    return this.items.map(item => item.mediaID);\n  }\n\n  get columnValue() {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    const ids = [];\n    const captions = [];\n\n    for (const item of this._items) {\n      ids.push(item.mediaID);\n      captions.push(item.caption);\n    }\n\n    const value = {};\n\n    value['f' + this.element.key + '_captions'] = captions;\n    value['f' + this.element.key] = ids;\n\n    return value;\n  }\n\n  get multipleValues() {\n    const items = [];\n\n    for (const item of this._items) {\n      items.push(new MultipleValueItem(this.element, item.mediaID));\n    }\n\n    return items;\n  }\n\n  toJSON() {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    const items = [];\n\n    for (const item of this._items) {\n      items.push(item.toJSON());\n    }\n\n    return items;\n  }\n\n  isEqual(value) {\n    return false;\n  }\n\n  contains(value) {\n    return false;\n  }\n\n  startsWith(value) {\n    return false;\n  }\n\n  isLessThan(value) {\n    return this.length < NumberUtils.parseDouble(value);\n  }\n\n  isGreaterThan(value) {\n    return this.length > NumberUtils.parseDouble(value);\n  }\n\n  mapItems(callback) {\n    return this._items.slice().map(callback);\n  }\n\n  addItem(id, caption) {\n    const item = new this.ItemClass(this, { caption: caption });\n\n    item.mediaID = id;\n\n    this._items.push(item);\n\n    return item;\n  }\n\n  removeItem(id) {\n    for (let index = 0; index < this._items.length; ++index) {\n      if (this._items[index].mediaID === id) {\n        const item = this._items[index];\n\n        this._items.splice(index, 1);\n\n        return item;\n      }\n    }\n\n    return null;\n  }\n\n  get hasCaptions() {\n    for (const item of this._items) {\n      if (TextUtils.isPresent(item.caption)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  // return a copy until it's determined that a mutable API is necessary\n  get items() {\n    return this._items.slice();\n  }\n}\n"],"mappings":"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"}