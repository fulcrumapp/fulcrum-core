{"version":3,"sources":["../../src/values/repeatable-item-value.js"],"names":["RepeatableItemValue","element","attrs","index","_index","_element","updateFromAPIAttributes","_id","id","_createdAt","DateUtils","parseEpochTimestamp","created_at","_updatedAt","updated_at","_formValuesJSON","form_values","_version","version","_changesetID","changeset_id","_recordID","record_id","_parentID","parent_id","_recordProjectID","record_project_id","_recordProjectName","record_project","_recordAssignedToID","record_assigned_to_id","_recordAssignedToName","record_assigned_to","_recordStatus","record_status","_createdByID","created_by_id","_createdByName","created_by","_updatedByID","updated_by_id","_updatedByName","updated_by","_latitude","latitude","_longitude","longitude","geometry","type","coordinates","length","_createdDuration","created_duration","_updatedDuration","updated_duration","_editedDuration","edited_duration","createdLocation","created_location","_createdLatitude","_createdLongitude","_createdAltitude","_createdAccuracy","altitude","horizontal_accuracy","updatedLocation","updated_location","_updatedLatitude","_updatedLongitude","_updatedAltitude","_updatedAccuracy","toJSON","simple","json","formatEpochTimestamp","createdAt","updatedAt","formValues","toSimpleJSON","geometryAsGeoJSON","updateTimestamps","now","Date","loadChangeset","dataSource","callback","loadCreatedBy","loadUpdatedBy","TypeError","_formValues","FormValues","isGeometryEnabled","titleFieldKeys","titles","fieldKey","formValue","get","displayValue","TextUtils","isPresent","push","join","searchableValue","hasCoordinate","_changeset","_updatedBy","_createdBy","value","createdLatitude","createdLongitude","updatedLatitude","updatedLongitude","hasCreatedCoordinate","createdAltitude","createdAccuracy","hasUpdatedCoordinate","updatedAltitude","updatedAccuracy","name","Feature"],"mappings":"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","sourcesContent":["import Feature from '../feature';\nimport FormValues from './form-values';\nimport DateUtils from '../utils/date-utils';\nimport TextUtils from '../utils/text-utils';\nimport loadObject from '../load-object';\n\nexport default class RepeatableItemValue extends Feature {\n  constructor(element, attrs, index) {\n    super();\n\n    this._index = index;\n    this._element = element;\n\n    this.updateFromAPIAttributes(attrs);\n  }\n\n  get isRecord() {\n    return false;\n  }\n\n  get isRepeatable() {\n    return true;\n  }\n\n  get element() {\n    return this._element;\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  get index() {\n    return this._index;\n  }\n\n  get createdAt() {\n    return this._createdAt;\n  }\n\n  get version() {\n    return this._version;\n  }\n\n  set createdAt(createdAt) {\n    if (createdAt != null && !(createdAt instanceof Date)) {\n      throw new TypeError('createdAt must be a Date');\n    }\n\n    this._createdAt = createdAt;\n  }\n\n  get updatedAt() {\n    return this._updatedAt;\n  }\n\n  set updatedAt(updatedAt) {\n    if (updatedAt != null && !(updatedAt instanceof Date)) {\n      throw new TypeError('updatedAt must be a Date');\n    }\n\n    this._updatedAt = updatedAt;\n  }\n\n  get formValues() {\n    if (!this._formValues) {\n      this._formValues = new FormValues(this._element, this._formValuesJSON);\n    }\n\n    return this._formValues;\n  }\n\n  get hasCoordinate() {\n    return this._latitude != null && this._longitude != null;\n  }\n\n  updateFromAPIAttributes(attrs) {\n    this._id = attrs.id;\n    this._createdAt = DateUtils.parseEpochTimestamp(attrs.created_at);\n    this._updatedAt = DateUtils.parseEpochTimestamp(attrs.updated_at);\n    this._formValuesJSON = attrs.form_values;\n    this._version = attrs.version != null ? attrs.version : 1;\n    this._changesetID = attrs.changeset_id;\n\n    this._recordID = attrs.record_id || null;\n    this._parentID = attrs.parent_id || null;\n\n    this._recordProjectID = attrs.record_project_id || null;\n    this._recordProjectName = attrs.record_project || null;\n    this._recordAssignedToID = attrs.record_assigned_to_id || null;\n    this._recordAssignedToName = attrs.record_assigned_to || null;\n    this._recordStatus = attrs.record_status || null;\n\n    this._createdByID = attrs.created_by_id || null;\n    this._createdByName = attrs.created_by || null;\n    this._updatedByID = attrs.updated_by_id || null;\n    this._updatedByName = attrs.updated_by || null;\n  \n    this._latitude = attrs.latitude || null;\n    this._longitude = attrs.longitude || null;\n\n    const geometry = attrs.geometry;\n\n    if (geometry != null &&\n        geometry.type === 'Point' &&\n        geometry.coordinates &&\n        geometry.coordinates.length > 1) {\n      this._latitude = geometry.coordinates[1];\n      this._longitude = geometry.coordinates[0];\n    }\n\n    this._createdDuration = attrs.created_duration != null ? attrs.created_duration : null;\n    this._updatedDuration = attrs.updated_duration != null ? attrs.updated_duration : null;\n    this._editedDuration = attrs.edited_duration != null ? attrs.edited_duration : null;\n\n    const createdLocation = attrs.created_location;\n\n    this._createdLatitude = null;\n    this._createdLongitude = null;\n    this._createdAltitude = null;\n    this._createdAccuracy = null;\n\n    if (createdLocation) {\n      this._createdLatitude = createdLocation.latitude;\n      this._createdLongitude = createdLocation.longitude;\n      this._createdAltitude = createdLocation.altitude;\n      this._createdAccuracy = createdLocation.horizontal_accuracy;\n    }\n\n    const updatedLocation = attrs.updated_location;\n\n    this._updatedLatitude = null;\n    this._updatedLongitude = null;\n    this._updatedAltitude = null;\n    this._updatedAccuracy = null;\n\n    if (updatedLocation) {\n      this._updatedLatitude = updatedLocation.latitude;\n      this._updatedLongitude = updatedLocation.longitude;\n      this._updatedAltitude = updatedLocation.altitude;\n      this._updatedAccuracy = updatedLocation.horizontal_accuracy;\n    }\n  }\n\n  toJSON({simple} = {}) {\n    const json = {};\n\n    json.id = this.id;\n    json.created_at = DateUtils.formatEpochTimestamp(this.createdAt);\n    json.updated_at = DateUtils.formatEpochTimestamp(this.updatedAt);\n    json.form_values = simple ? this.formValues.toSimpleJSON() : this.formValues.toJSON();\n    json.geometry = this.geometryAsGeoJSON;\n    json.created_location = this.createdLocation;\n    json.updated_location = this.updatedLocation;\n    json.created_duration = this._createdDuration != null ? this._createdDuration : null;\n    json.updated_duration = this._updatedDuration != null ? this._updatedDuration : null;\n    json.edited_duration = this._editedDuration != null ? this._editedDuration : null;\n    json.created_by_id = this._createdByID != null ? this._createdByID : null;\n    json.updated_by_id = this._updatedByID != null ? this._updatedByID : null;\n    json.version = this._version != null ? this._version : null;\n    json.changeset_id = this._changesetID != null ? this._changesetID : null;\n\n    return json;\n  }\n\n  updateTimestamps() {\n    const now = new Date();\n\n    if (!this._createdAt) {\n      this._createdAt = now;\n    }\n\n    this._updatedAt = now;\n  }\n\n  get isGeometryEnabled() {\n    return this._element.isGeometryEnabled;\n  }\n\n  get displayValue() {\n    const titleFieldKeys = this._element.titleFieldKeys;\n    const titles = [];\n\n    for (const fieldKey of titleFieldKeys) {\n      const formValue = this.formValues.get(fieldKey);\n\n      if (formValue) {\n        const displayValue = formValue.displayValue;\n\n        if (TextUtils.isPresent(displayValue)) {\n          titles.push(displayValue);\n        }\n      }\n    }\n\n    return titles.join(', ');\n  }\n\n  get searchableValue() {\n    return this.formValues.searchableValue;\n  }\n\n  get geometryAsGeoJSON() {\n    if (!this.hasCoordinate) {\n      return null;\n    }\n\n    return {\n      type: 'Point',\n      coordinates: [ this._longitude, this._latitude ]\n    };\n  }\n\n  get latitude() {\n    return this._latitude;\n  }\n\n  set latitude(latitude) {\n    this._latitude = latitude;\n  }\n\n  get longitude() {\n    return this._longitude;\n  }\n\n  set longitude(longitude) {\n    this._longitude = longitude;\n  }\n\n  get changesetID() {\n    return this._changesetID;\n  }\n\n  get createdByID() {\n    return this._createdByID;\n  }\n\n  get updatedByID() {\n    return this._updatedByID;\n  }\n\n  loadChangeset(dataSource, callback) {\n    return loadObject(this, dataSource, 'changeset', 'getChangeset', callback);\n  }\n\n  loadCreatedBy(dataSource, callback) {\n    return loadObject(this, dataSource, 'createdBy', 'getUser', callback);\n  }\n\n  loadUpdatedBy(dataSource, callback) {\n    return loadObject(this, dataSource, 'updatedBy', 'getUser', callback);\n  }\n\n  get changeset() {\n    return this._changeset;\n  }\n\n  get updatedBy() {\n    return this._updatedBy;\n  }\n\n  get createdBy() {\n    return this._createdBy;\n  }\n\n  get createdDuration() {\n    return this._createdDuration;\n  }\n\n  set createdDuration(value) {\n    this._createdDuration = (value != null ? +value : null);\n  }\n\n  get updatedDuration() {\n    return this._updatedDuration;\n  }\n\n  set updatedDuration(value) {\n    this._updatedDuration = (value != null ? +value : null);\n  }\n\n  get editedDuration() {\n    return this._editedDuration;\n  }\n\n  set editedDuration(value) {\n    this._editedDuration = (value != null ? +value : null);\n  }\n\n  get createdLatitude() {\n    return this._createdLatitude;\n  }\n\n  get createdLongitude() {\n    return this._createdLongitude;\n  }\n\n  get createdAltitude() {\n    return this._createdAltitude;\n  }\n\n  get createdAccuracy() {\n    return this._createdAccuracy;\n  }\n\n  set createdLatitude(value) {\n    this._createdLatitude = (value != null ? +value : null);\n  }\n\n  set createdLongitude(value) {\n    this._createdLongitude = (value != null ? +value : null);\n  }\n\n  set createdAltitude(value) {\n    this._createdAltitude = (value != null ? +value : null);\n  }\n\n  set createdAccuracy(value) {\n    this._createdAccuracy = (value != null ? +value : null);\n  }\n\n  get updatedLatitude() {\n    return this._updatedLatitude;\n  }\n\n  get updatedLongitude() {\n    return this._updatedLongitude;\n  }\n\n  get updatedAltitude() {\n    return this._updatedAltitude;\n  }\n\n  get updatedAccuracy() {\n    return this._updatedAccuracy;\n  }\n\n  set updatedLatitude(value) {\n    this._updatedLatitude = (value != null ? +value : null);\n  }\n\n  set updatedLongitude(value) {\n    this._updatedLongitude = (value != null ? +value : null);\n  }\n\n  set updatedAltitude(value) {\n    this._updatedAltitude = (value != null ? +value : null);\n  }\n\n  set updatedAccuracy(value) {\n    this._updatedAccuracy = (value != null ? +value : null);\n  }\n\n  get hasCreatedCoordinate() {\n    return this.createdLatitude != null && this.createdLongitude != null;\n  }\n\n  get hasUpdatedCoordinate() {\n    return this.updatedLatitude != null && this.updatedLongitude != null;\n  }\n\n  get createdLocation() {\n    if (this.hasCreatedCoordinate) {\n      return {\n        latitude: this.createdLatitude,\n        longitude: this.createdLongitude,\n        altitude: this.createdAltitude,\n        horizontal_accuracy: this.createdAccuracy\n      };\n    }\n\n    return null;\n  }\n\n  get updatedLocation() {\n    if (this.hasUpdatedCoordinate) {\n      return {\n        latitude: this.updatedLatitude,\n        longitude: this.updatedLongitude,\n        altitude: this.updatedAltitude,\n        horizontal_accuracy: this.updatedAccuracy\n      };\n    }\n\n    return null;\n  }\n\n  get recordID() {\n    return this._recordID;\n  }\n\n  get parentID() {\n    return this._parentID;\n  }\n\n  get createdByName() {\n    return this._createdByName;\n  }\n\n  set createdByName(name) {\n    this._createdByName = name;\n  }\n\n  get updatedByName() {\n    return this._updatedByName;\n  }\n\n  set updatedByName(name) {\n    this._updatedByName = name;\n  }\n\n  get recordProjectName() {\n    return this._recordProjectName;\n  }\n\n  set recordProjectName(name) {\n    this._recordProjectName = name;\n  }\n\n  get recordProjectID() {\n    return this._recordProjectID;\n  }\n\n  set recordProjectID(id) {\n    this._recordProjectID = id;\n  }\n\n  get recordAssignedToName() {\n    return this._recordAssignedToName;\n  }\n\n  set recordAssignedToName(name) {\n    this._recordAssignedToName = name;\n  }\n\n  get recordAssignedToID() {\n    return this._recordAssignedToID;\n  }\n\n  set recordAssignedToID(id) {\n    this._recordAssignedToID = id;\n  }\n\n  get recordStatus() {\n    return this._recordStatus;\n  }\n}\n"],"file":"repeatable-item-value.js"}