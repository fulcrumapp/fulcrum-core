{"version":3,"file":"boolean-value.js","names":["BooleanValue","element","booleanValue","format","useDisplayValue","displayValue","toJSON","isEqual","toString","FormValue"],"sources":["../../src/values/boolean-value.js"],"sourcesContent":["import FormValue from './form-value';\n\nexport default class BooleanValue extends FormValue {\n  constructor(element, booleanValue) {\n    super(element, booleanValue);\n\n    this.booleanValue = !!booleanValue;\n  }\n\n  format({useDisplayValue = false}) {\n    return useDisplayValue ? this.displayValue : this.booleanValue;\n  }\n\n  get displayValue() {\n    return this.booleanValue.toString();\n  }\n\n  get length() {\n    return 1;\n  }\n\n  // This is really more a \"falsey\" value rather than empty.\n  // It is used with the is_empty and is_not_empty visibility\n  // conditions (e.g. what value would this field have that\n  // could toggle visibility of other elements?)\n  get isEmpty() {\n    return !this.booleanValue;\n  }\n\n  get searchableValue() {\n    return this.booleanValue.toString();\n  }\n\n  get columnValue() {\n    return this.booleanValue;\n  }\n\n  get multipleValues() {\n    return null;\n  }\n\n  toJSON() {\n    return this.booleanValue;\n  }\n\n  isEqual(booleanValue) {\n    return this.booleanValue === booleanValue;\n  }\n}\n"],"mappings":";;;;;AAAA;;;;;;;;;;;;IAEqBA,Y;;;EACnB,sBAAYC,OAAZ,EAAqBC,YAArB,EAAmC;IAAA;;IACjC,8BAAMD,OAAN,EAAeC,YAAf;IAEA,MAAKA,YAAL,GAAoB,CAAC,CAACA,YAAtB;IAHiC;EAIlC;;;;SAEDC,M,GAAA,sBAAkC;IAAA,gCAA1BC,eAA0B;IAAA,IAA1BA,eAA0B,qCAAR,KAAQ;IAChC,OAAOA,eAAe,GAAG,KAAKC,YAAR,GAAuB,KAAKH,YAAlD;EACD,C;;SA8BDI,M,GAAA,kBAAS;IACP,OAAO,KAAKJ,YAAZ;EACD,C;;SAEDK,O,GAAA,iBAAQL,YAAR,EAAsB;IACpB,OAAO,KAAKA,YAAL,KAAsBA,YAA7B;EACD,C;;;;SAlCD,eAAmB;MACjB,OAAO,KAAKA,YAAL,CAAkBM,QAAlB,EAAP;IACD;;;SAED,eAAa;MACX,OAAO,CAAP;IACD,C,CAED;IACA;IACA;IACA;;;;SACA,eAAc;MACZ,OAAO,CAAC,KAAKN,YAAb;IACD;;;SAED,eAAsB;MACpB,OAAO,KAAKA,YAAL,CAAkBM,QAAlB,EAAP;IACD;;;SAED,eAAkB;MAChB,OAAO,KAAKN,YAAZ;IACD;;;SAED,eAAqB;MACnB,OAAO,IAAP;IACD;;;;EArCuCO,qB"}