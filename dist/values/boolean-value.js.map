{"version":3,"sources":["../../src/values/boolean-value.js"],"names":["BooleanValue","element","booleanValue","format","useDisplayValue","displayValue","toJSON","isEqual","toString","FormValue"],"mappings":";;;;;AAAA;;;;;;;;;;IAEqBA,Y;;;;;AACnB,wBAAYC,OAAZ,EAAqBC,YAArB,EAAmC;AAAA;;AACjC,kCAAMD,OAAN,EAAeC,YAAf;AAEA,UAAKA,YAAL,GAAoB,CAAC,CAACA,YAAtB;AAHiC;AAIlC;;;;SAEDC,M,GAAA,sBAAkC;AAAA,oCAA1BC,eAA0B;AAAA,QAA1BA,eAA0B,qCAAR,KAAQ;AAChC,WAAOA,eAAe,GAAG,KAAKC,YAAR,GAAuB,KAAKH,YAAlD;AACD,G;;SA8BDI,M,GAAA,kBAAS;AACP,WAAO,KAAKJ,YAAZ;AACD,G;;SAEDK,O,GAAA,iBAAQL,YAAR,EAAsB;AACpB,WAAO,KAAKA,YAAL,KAAsBA,YAA7B;AACD,G;;;;wBAlCkB;AACjB,aAAO,KAAKA,YAAL,CAAkBM,QAAlB,EAAP;AACD;;;wBAEY;AACX,aAAO,CAAP;AACD,K,CAED;AACA;AACA;AACA;;;;wBACc;AACZ,aAAO,CAAC,KAAKN,YAAb;AACD;;;wBAEqB;AACpB,aAAO,KAAKA,YAAL,CAAkBM,QAAlB,EAAP;AACD;;;wBAEiB;AAChB,aAAO,KAAKN,YAAZ;AACD;;;wBAEoB;AACnB,aAAO,IAAP;AACD;;;;EArCuCO,qB","sourcesContent":["import FormValue from './form-value';\n\nexport default class BooleanValue extends FormValue {\n  constructor(element, booleanValue) {\n    super(element, booleanValue);\n\n    this.booleanValue = !!booleanValue;\n  }\n\n  format({useDisplayValue = false}) {\n    return useDisplayValue ? this.displayValue : this.booleanValue;\n  }\n\n  get displayValue() {\n    return this.booleanValue.toString();\n  }\n\n  get length() {\n    return 1;\n  }\n\n  // This is really more a \"falsey\" value rather than empty.\n  // It is used with the is_empty and is_not_empty visibility\n  // conditions (e.g. what value would this field have that\n  // could toggle visibility of other elements?)\n  get isEmpty() {\n    return !this.booleanValue;\n  }\n\n  get searchableValue() {\n    return this.booleanValue.toString();\n  }\n\n  get columnValue() {\n    return this.booleanValue;\n  }\n\n  get multipleValues() {\n    return null;\n  }\n\n  toJSON() {\n    return this.booleanValue;\n  }\n\n  isEqual(booleanValue) {\n    return this.booleanValue === booleanValue;\n  }\n}\n"],"file":"boolean-value.js"}