{"version":3,"file":"text-value.js","names":["TextValue","format","useDisplayValue","isEmpty","element","isNumeric","textValue","numericValue","displayValue","NumberUtils","localizedStringFromMachineString","isDecimalFormat","TextualValue"],"sources":["../../src/values/text-value.js"],"sourcesContent":["import TextualValue from './textual-value';\nimport NumberUtils from '../utils/number-utils';\n\nexport default class TextValue extends TextualValue {\n  get columnValue() {\n    if (this.element.isNumeric) {\n      return this.numericValue;\n    }\n    // this does NOT work in loose mode\n    // return super.columnValue;\n    return this.textValue || null;\n  }\n\n  get displayValue() {\n    if (this.element.isNumeric && this.textValue != null) {\n      return NumberUtils.localizedStringFromMachineString(this.textValue, this.element.isDecimalFormat);\n    }\n\n    return this.textValue || '';\n  }\n\n  format({useDisplayValue = false}) {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    if (this.element.isNumeric && this.textValue != null) {\n      return this.numericValue;\n    }\n\n    return this.displayValue;\n  }\n}\n"],"mappings":";;;;;AAAA;;AACA;;;;;;;;;;;;IAEqBA,S;;;;;;;;;SAkBnBC,M,GAAA,sBAAkC;IAAA,gCAA1BC,eAA0B;IAAA,IAA1BA,eAA0B,qCAAR,KAAQ;;IAChC,IAAI,KAAKC,OAAT,EAAkB;MAChB,OAAO,IAAP;IACD;;IAED,IAAI,KAAKC,OAAL,CAAaC,SAAb,IAA0B,KAAKC,SAAL,IAAkB,IAAhD,EAAsD;MACpD,OAAO,KAAKC,YAAZ;IACD;;IAED,OAAO,KAAKC,YAAZ;EACD,C;;;;SA3BD,eAAkB;MAChB,IAAI,KAAKJ,OAAL,CAAaC,SAAjB,EAA4B;QAC1B,OAAO,KAAKE,YAAZ;MACD,CAHe,CAIhB;MACA;;;MACA,OAAO,KAAKD,SAAL,IAAkB,IAAzB;IACD;;;SAED,eAAmB;MACjB,IAAI,KAAKF,OAAL,CAAaC,SAAb,IAA0B,KAAKC,SAAL,IAAkB,IAAhD,EAAsD;QACpD,OAAOG,uBAAA,CAAYC,gCAAZ,CAA6C,KAAKJ,SAAlD,EAA6D,KAAKF,OAAL,CAAaO,eAA1E,CAAP;MACD;;MAED,OAAO,KAAKL,SAAL,IAAkB,EAAzB;IACD;;;;EAhBoCM,wB"}