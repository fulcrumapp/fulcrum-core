{"version":3,"file":"text-value.js","names":["TextValue","format","useDisplayValue","isEmpty","element","isNumeric","textValue","numericValue","displayValue","NumberUtils","localizedStringFromMachineString","isDecimalFormat","TextualValue"],"sources":["../../src/values/text-value.js"],"sourcesContent":["import TextualValue from './textual-value';\nimport NumberUtils from '../utils/number-utils';\n\nexport default class TextValue extends TextualValue {\n  get columnValue() {\n    if (this.element.isNumeric) {\n      return this.numericValue;\n    }\n    // this does NOT work in loose mode\n    // return super.columnValue;\n    return this.textValue || null;\n  }\n\n  get displayValue() {\n    if (this.element.isNumeric && this.textValue != null) {\n      return NumberUtils.localizedStringFromMachineString(this.textValue, this.element.isDecimalFormat);\n    }\n\n    return this.textValue || '';\n  }\n\n  format({useDisplayValue = false}) {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    if (this.element.isNumeric && this.textValue != null) {\n      return this.numericValue;\n    }\n\n    return this.displayValue;\n  }\n}\n"],"mappings":";;;;AAAA;AACA;AAAgD;AAAA;AAAA;AAAA;AAAA;AAAA,IAE3BA,SAAS;EAAA;EAAA;IAAA;EAAA;EAAA;EAAA,OAkB5BC,MAAM,GAAN,sBAAkC;IAAA,gCAA1BC,eAAe;MAAfA,eAAe,qCAAG,KAAK;IAC7B,IAAI,IAAI,CAACC,OAAO,EAAE;MAChB,OAAO,IAAI;IACb;IAEA,IAAI,IAAI,CAACC,OAAO,CAACC,SAAS,IAAI,IAAI,CAACC,SAAS,IAAI,IAAI,EAAE;MACpD,OAAO,IAAI,CAACC,YAAY;IAC1B;IAEA,OAAO,IAAI,CAACC,YAAY;EAC1B,CAAC;EAAA;IAAA;IAAA,KA3BD,eAAkB;MAChB,IAAI,IAAI,CAACJ,OAAO,CAACC,SAAS,EAAE;QAC1B,OAAO,IAAI,CAACE,YAAY;MAC1B;MACA;MACA;MACA,OAAO,IAAI,CAACD,SAAS,IAAI,IAAI;IAC/B;EAAC;IAAA;IAAA,KAED,eAAmB;MACjB,IAAI,IAAI,CAACF,OAAO,CAACC,SAAS,IAAI,IAAI,CAACC,SAAS,IAAI,IAAI,EAAE;QACpD,OAAOG,uBAAW,CAACC,gCAAgC,CAAC,IAAI,CAACJ,SAAS,EAAE,IAAI,CAACF,OAAO,CAACO,eAAe,CAAC;MACnG;MAEA,OAAO,IAAI,CAACL,SAAS,IAAI,EAAE;IAC7B;EAAC;EAAA;AAAA,EAhBoCM,wBAAY;AAAA"}