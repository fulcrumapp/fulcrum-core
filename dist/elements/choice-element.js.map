{"version":3,"sources":["../../src/elements/choice-element.js"],"names":["ChoiceElement","parent","attributes","multiple","allowOther","allow_other","_choiceFilter","_overrideChoices","_choiceListID","choice_list_id","_choices","choices","choice","push","Choice","load","dataSource","callback","_choicesByValue","getChoiceList","err","choiceList","slice","setImmediate","resetOverrides","choiceByValue","value","filteredChoices","choiceFilter","items","filteredItems","matchedValues","item","filter","isMatch","toLowerCase","indexOf","overrideChoices","length","choiceAttributes","Object","assign","getOwnPropertyDescriptor","Element","prototype","get","call"],"mappings":"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","sourcesContent":["import Element from './element';\nimport Choice from './choice';\n\nexport default class ChoiceElement extends Element {\n  constructor(parent, attributes) {\n    super(parent, attributes);\n\n    this.multiple = !!attributes.multiple;\n    this.allowOther = !!attributes.allow_other;\n\n    this._choiceFilter = null;\n    this._overrideChoices = null;\n\n    this._choiceListID = attributes.choice_list_id;\n    this._choices = [];\n\n    // TODO(zhm) the loading needs to be re-worked to support choice lists\n    if (attributes.choices) {\n      for (const choice of attributes.choices) {\n        this._choices.push(new Choice(choice));\n      }\n    }\n  }\n\n  load(dataSource, callback) {\n    this._choicesByValue = null;\n\n    if (this._choiceListID) {\n      dataSource.getChoiceList(this._choiceListID, (err, choiceList) => {\n        // TODO(zhm) Some forms have orphaned choice lists (life sucks)\n        // Maybe we should add a parameter to the load() method to throw\n        // errors.\n        if (err) {\n          return callback(err);\n        }\n\n        this.choiceList = choiceList;\n        this._choices = this.choiceList.choices.slice();\n\n        return callback();\n      });\n    } else {\n      setImmediate(callback);\n    }\n  }\n\n  get isLengthValidationSupported() {\n    return this.multiple;\n  }\n\n  get choices() {\n    return this._overrideChoices ? this._overrideChoices : this.filteredChoices;\n  }\n\n  get choiceFilter() {\n    return this._choiceFilter;\n  }\n\n  set choiceFilter(choiceFilter) {\n    this._choiceFilter = choiceFilter;\n  }\n\n  get filteredChoices() {\n    const items = this._choices;\n\n    if (!this.choiceFilter) {\n      return items;\n    }\n\n    const filteredItems = [];\n    const matchedValues = {};\n\n    for (const item of items) {\n      for (const filter of this.choiceFilter) {\n        const isMatch = item.value.toLowerCase().indexOf(filter.toLowerCase()) !== -1;\n\n        if (isMatch && !matchedValues[item.value]) {\n          filteredItems.push(item);\n          matchedValues[item.value] = item;\n        }\n      }\n    }\n\n    return filteredItems;\n  }\n\n  get overrideChoices() {\n    return this._overrideChoices;\n  }\n\n  set overrideChoices(overrideChoices) {\n    this._choicesByValue = null;\n\n    if (!overrideChoices || overrideChoices.length < 1) {\n      this._overrideChoices = null;\n      return;\n    }\n\n    const choices = [];\n\n    for (const choiceAttributes of overrideChoices) {\n      const choice = new Choice(choiceAttributes);\n\n      choices.push(choice);\n    }\n\n    this._overrideChoices = choices;\n  }\n\n  get overrideValues() {\n    return Object.assign(Object.getOwnPropertyDescriptor(Element.prototype, 'overrideValues').get.call(this), {\n      choiceFilter: this._choiceFilter,\n      overrideChoices: this._overrideChoices\n    });\n  }\n\n  resetOverrides() {\n    super.resetOverrides();\n\n    this._choiceFilter = null;\n    this._overrideChoices = null;\n  }\n\n  choiceByValue(value) {\n    if (!this._choicesByValue) {\n      this._choicesByValue = {};\n\n      for (const choice of this.choices) {\n        this._choicesByValue[choice.value] = choice;\n      }\n    }\n\n    return this._choicesByValue[value];\n  }\n}\n"],"file":"choice-element.js"}