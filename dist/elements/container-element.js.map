{"version":3,"file":"container-element.js","names":["ContainerElement","parent","attributes","createChildElements","elements","resetOverrides","element","initialize","ChildElements","includeInto","Element"],"sources":["../../src/elements/container-element.js"],"sourcesContent":["import Element from './element';\nimport ChildElements from './child-elements';\n\nexport default class ContainerElement extends Element {\n  constructor(parent, attributes) {\n    super(parent, attributes);\n\n    this.createChildElements(attributes.elements);\n  }\n\n  resetOverrides() {\n    super.resetOverrides();\n\n    for (const element of this.elements) {\n      element.resetOverrides();\n    }\n  }\n\n  static initialize() {\n    // this is a bit of a hack to get around circular dependencies. This gets\n    // called once from within the factory to setup the class. Putting this\n    // at global scope introduces circular dependency errors because ChildElements\n    // ends up loading the factory.\n    ChildElements.includeInto(ContainerElement);\n  }\n}\n"],"mappings":";;;;;AAAA;;AACA;;;;;;;;;;;;;;IAEqBA,gB;;;EACnB,0BAAYC,MAAZ,EAAoBC,UAApB,EAAgC;IAAA;;IAC9B,4BAAMD,MAAN,EAAcC,UAAd;;IAEA,MAAKC,mBAAL,CAAyBD,UAAU,CAACE,QAApC;;IAH8B;EAI/B;;;;SAEDC,c,GAAA,0BAAiB;IACf,mBAAMA,cAAN;;IAEA,qDAAsB,KAAKD,QAA3B,wCAAqC;MAAA,IAA1BE,OAA0B;MACnCA,OAAO,CAACD,cAAR;IACD;EACF,C;;mBAEME,U,GAAP,sBAAoB;IAClB;IACA;IACA;IACA;IACAC,yBAAA,CAAcC,WAAd,CAA0BT,gBAA1B;EACD,C;;;EArB2CU,mB"}