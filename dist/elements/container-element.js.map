{"version":3,"file":"container-element.js","names":["ContainerElement","parent","attributes","createChildElements","elements","resetOverrides","element","initialize","ChildElements","includeInto","Element"],"sources":["../../src/elements/container-element.js"],"sourcesContent":["import Element from './element';\nimport ChildElements from './child-elements';\n\nexport default class ContainerElement extends Element {\n  constructor(parent, attributes) {\n    super(parent, attributes);\n\n    this.createChildElements(attributes.elements);\n  }\n\n  resetOverrides() {\n    super.resetOverrides();\n\n    for (const element of this.elements) {\n      element.resetOverrides();\n    }\n  }\n\n  static initialize() {\n    // this is a bit of a hack to get around circular dependencies. This gets\n    // called once from within the factory to setup the class. Putting this\n    // at global scope introduces circular dependency errors because ChildElements\n    // ends up loading the factory.\n    ChildElements.includeInto(ContainerElement);\n  }\n}\n"],"mappings":";;;;AAAA;AACA;AAA6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAExBA,gBAAgB;EAAA;EACnC,0BAAYC,MAAM,EAAEC,UAAU,EAAE;IAAA;IAC9B,4BAAMD,MAAM,EAAEC,UAAU,CAAC;IAEzB,MAAKC,mBAAmB,CAACD,UAAU,CAACE,QAAQ,CAAC;IAAC;EAChD;EAAC;EAAA,OAEDC,cAAc,GAAd,0BAAiB;IACf,mBAAMA,cAAc;IAEpB,qDAAsB,IAAI,CAACD,QAAQ,wCAAE;MAAA,IAA1BE,OAAO;MAChBA,OAAO,CAACD,cAAc,EAAE;IAC1B;EACF,CAAC;EAAA,iBAEME,UAAU,GAAjB,sBAAoB;IAClB;IACA;IACA;IACA;IACAC,yBAAa,CAACC,WAAW,CAACT,gBAAgB,CAAC;EAC7C,CAAC;EAAA;AAAA,EArB2CU,mBAAO;AAAA"}