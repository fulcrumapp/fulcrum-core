{"version":3,"sources":["../../src/elements/display-options.js"],"names":["DisplayOptions","attributes","style","currency","format","value","TextUtils","isPresent","isNumber","NumberUtils","localizedStringFromMachineString","isDate","date","DateUtils","parseDate","formatLocalizedDate","isCurrency","formatCurrency"],"mappings":";;;;;AAAA;;AACA;;AACA;;;;;;;;IAEqBA,c;;;AACnB,0BAAYC,UAAZ,EAAwB;AACtB,SAAKC,KAAL,GAAaD,UAAU,CAACC,KAAxB;AACA,SAAKC,QAAL,GAAgBF,UAAU,CAACE,QAA3B;AACD;;;;SAkBDC,M,GAAA,gBAAOC,KAAP,EAAc;AACZ,QAAI,CAACC,sBAAUC,SAAV,CAAoBF,KAApB,CAAL,EAAiC;AAC/B,aAAOA,KAAP;AACD;;AAED,YAAQ,IAAR;AACE,WAAK,KAAKG,QAAV;AAAoB;AAClB,iBAAOC,wBAAYC,gCAAZ,CAA6CL,KAA7C,EAAoD,IAApD,CAAP;AACD;;AAED,WAAK,KAAKM,MAAV;AAAkB;AAChB,cAAMC,IAAI,GAAGC,sBAAUC,SAAV,CAAoBT,KAApB,CAAb;;AAEA,cAAIO,IAAI,IAAI,IAAZ,EAAkB;AAChB,mBAAOC,sBAAUE,mBAAV,CAA8BH,IAA9B,CAAP;AACD;;AAED;AACD;;AAED,WAAK,KAAKI,UAAV;AAAsB;AACpB,iBAAOP,wBAAYQ,cAAZ,CAA2BZ,KAA3B,EAAkC,KAAKF,QAAvC,CAAP;AACD;;AAED;AACE;AApBJ;;AAuBA,WAAOE,KAAP;AACD,G;;;;wBA7CgB;AACf,aAAO,KAAKH,KAAL,KAAe,UAAtB;AACD;;;wBAEc;AACb,aAAO,KAAKA,KAAL,KAAe,QAAtB;AACD;;;wBAEY;AACX,aAAO,KAAKA,KAAL,KAAe,MAAtB;AACD;;;wBAEY;AACX,aAAO,KAAKA,KAAL,KAAe,MAAtB;AACD","sourcesContent":["import TextUtils from '../utils/text-utils';\nimport NumberUtils from '../utils/number-utils';\nimport DateUtils from '../utils/date-utils';\n\nexport default class DisplayOptions {\n  constructor(attributes) {\n    this.style = attributes.style;\n    this.currency = attributes.currency;\n  }\n\n  get isCurrency() {\n    return this.style === 'currency';\n  }\n\n  get isNumber() {\n    return this.style === 'number';\n  }\n\n  get isDate() {\n    return this.style === 'date';\n  }\n\n  get isText() {\n    return this.style === 'text';\n  }\n\n  format(value) {\n    if (!TextUtils.isPresent(value)) {\n      return value;\n    }\n\n    switch (true) {\n      case this.isNumber: {\n        return NumberUtils.localizedStringFromMachineString(value, true);\n      }\n\n      case this.isDate: {\n        const date = DateUtils.parseDate(value);\n\n        if (date != null) {\n          return DateUtils.formatLocalizedDate(date);\n        }\n\n        break;\n      }\n\n      case this.isCurrency: {\n        return NumberUtils.formatCurrency(value, this.currency);\n      }\n\n      default:\n        break;\n    }\n\n    return value;\n  }\n}\n"],"file":"display-options.js"}