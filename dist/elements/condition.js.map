{"version":3,"file":"condition.js","names":["Condition","element","attributes","fieldKey","field_key","operator","value","isEqual","formValue","stringValue","TextUtils","isEmpty","contains","startsWith","isLessThan","isGreaterThan","shouldElementBeVisible","record","values","visibilityCache","key","cache","shouldBeVisible","shouldElementBeVisibleRecursive","isSectionElement","hasVisibleChildren","elements","childElement","visible","overrideIsHidden","isHidden","hasHiddenParent","hasVisibilityConditions","visibleConditionsType","visibleConditions","condition","isSatisfied","parentsVisible","iterator","parent","parentVisible","result","shouldElementBeRequired","hasRequiredConditions","overrideIsRequired","isRequired","shouldBeRequired","requiredConditionsType","requiredConditions","valueForCondition","statusValue","get","elementForCondition","form","elementsByKey","toJSON","referencedElement","isReferencedFieldSatisfied","skipElement","_isSatisfied"],"sources":["../../src/elements/condition.js"],"sourcesContent":["import TextUtils from '../utils/text-utils';\n\nexport default class Condition {\n  constructor(element, attributes) {\n    this.element = element;\n    this.fieldKey = attributes.field_key;\n    this.operator = attributes.operator;\n    this.value = attributes.value;\n  }\n\n  static isEqual(formValue, stringValue) {\n    if (formValue == null) {\n      return TextUtils.isEmpty(stringValue);\n    }\n    return formValue.isEqual(stringValue);\n  }\n\n  static isEmpty(formValue) {\n    return formValue == null || formValue.isEmpty;\n  }\n\n  static contains(formValue, stringValue) {\n    if (formValue == null) {\n      return TextUtils.isEmpty(stringValue);\n    }\n    return formValue.contains(stringValue);\n  }\n\n  static startsWith(formValue, stringValue) {\n    if (formValue == null) {\n      return TextUtils.isEmpty(stringValue);\n    }\n    return formValue.startsWith(stringValue);\n  }\n\n  static isLessThan(formValue, stringValue) {\n    if (formValue == null) {\n      return TextUtils.isEmpty(stringValue);\n    }\n    return formValue.isLessThan(stringValue);\n  }\n\n  static isGreaterThan(formValue, stringValue) {\n    if (formValue == null) {\n      return TextUtils.isEmpty(stringValue);\n    }\n    return formValue.isGreaterThan(stringValue);\n  }\n\n  static shouldElementBeVisible(element, record, values, visibilityCache) {\n    if (visibilityCache != null && visibilityCache[element.key] != null) {\n      return visibilityCache[element.key];\n    }\n\n    const cache = visibilityCache || {};\n\n    let shouldBeVisible = Condition.shouldElementBeVisibleRecursive(element, record, values, cache);\n\n    if (element.isSectionElement) {\n      let hasVisibleChildren = false;\n\n      for (const childElement of element.elements) {\n        const visible = Condition.shouldElementBeVisibleRecursive(childElement, record, values, cache);\n\n        if (visible) {\n          hasVisibleChildren = true;\n          break;\n        }\n      }\n\n      shouldBeVisible = shouldBeVisible && hasVisibleChildren;\n    }\n\n    return shouldBeVisible;\n  }\n\n  static shouldElementBeVisibleRecursive(element, record, values, cache) {\n    if (cache != null && cache[element.key] != null) {\n      return cache[element.key];\n    }\n\n    // break circular conditions by assigning an early `true` value so if this\n    // method is re-entered again for the same element before the recursion\n    // ends, it early exits instead of blowing the stack\n    cache[element.key] = true;\n\n    // if the override value is set, always return it (SETHIDDEN() always wins)\n    if (element.overrideIsHidden != null) {\n      cache[element.key] = !element.isHidden;\n      return !element.isHidden;\n    }\n\n    if (element.isHidden || element.hasHiddenParent) {\n      cache[element.key] = false;\n      return false;\n    }\n\n    let shouldBeVisible = false;\n\n    if (!element.hasVisibilityConditions) {\n      shouldBeVisible = true;\n    }\n\n    if (element.visibleConditionsType === 'any') {\n      for (const condition of element.visibleConditions) {\n        const isSatisfied = condition.isSatisfied(record, values, cache);\n\n        if (isSatisfied) {\n          shouldBeVisible = true;\n          break;\n        }\n      }\n    } else if (element.visibleConditionsType === 'all') {\n      shouldBeVisible = true;\n\n      for (const condition of element.visibleConditions) {\n        const isSatisfied = condition.isSatisfied(record, values, cache);\n\n        if (!isSatisfied) {\n          shouldBeVisible = false;\n        }\n      }\n    }\n\n    // Make sure all parent elements are also visible according to these same rules.\n    // If a section is hidden because of a rule, all child elements are implicitly hidden\n    // and should return NO from this method. This makes it very easy to determine value relevance\n    // by looking at only the field values without having to worry about Section elements and\n    // dependencies. See clearInvisibleValuesWithConditionValues for usage of this method that\n    // relies on this behavior.\n\n    let parentsVisible = true;\n\n    let iterator = element.parent;\n\n    while (iterator != null) {\n      const parentVisible = Condition.shouldElementBeVisibleRecursive(iterator, record, values, cache);\n\n      if (!parentVisible) {\n        parentsVisible = false;\n        break;\n      }\n\n      iterator = iterator.parent;\n    }\n\n    const result = parentsVisible && shouldBeVisible;\n\n    cache[element.key] = result;\n\n    return result;\n  }\n\n  static shouldElementBeRequired(element, record, values) {\n    // If there are no conditions, or if the override value is set, always return\n    // the current required flag. (SETREQUIRED() always wins)\n    if (!element.hasRequiredConditions || element.overrideIsRequired != null) {\n      return element.isRequired;\n    }\n\n    const cache = {};\n\n    let shouldBeRequired = false;\n\n    if (element.requiredConditionsType === 'any') {\n      for (const condition of element.requiredConditions) {\n        const isSatisfied = condition.isSatisfied(record, values, cache);\n\n        if (isSatisfied) {\n          shouldBeRequired = true;\n          break;\n        }\n      }\n    } else if (element.requiredConditionsType === 'all') {\n      shouldBeRequired = true;\n\n      for (const condition of element.requiredConditions) {\n        const isSatisfied = condition.isSatisfied(record, values, cache);\n\n        if (!isSatisfied) {\n          shouldBeRequired = false;\n          break;\n        }\n      }\n    }\n\n    return shouldBeRequired;\n  }\n\n  static valueForCondition(condition, values, record) {\n    if (condition.fieldKey === '@status') {\n      return record.statusValue;\n    }\n\n    return values.get(condition.fieldKey);\n  }\n\n  static elementForCondition(condition, record) {\n    if (condition.fieldKey === '@status') {\n      return record.statusValue.element;\n    }\n    return record.form.elementsByKey[condition.fieldKey];\n  }\n\n  toJSON() {\n    return {\n      field_key: this.fieldKey,\n      operator: this.operator,\n      value: this.value\n    };\n  }\n\n  isSatisfied(record, values, cache) {\n    const referencedElement = Condition.elementForCondition(this, record);\n\n    let isReferencedFieldSatisfied = true;\n\n    if (referencedElement != null) {\n      // If the referenced element or one its parents is explicitly marked as hidden, it's a special\n      // case and the referenced element should always be considered satisfied so that it's possible\n      // to put conditions on explicitly hidden values.\n\n      const skipElement = referencedElement.isHidden || referencedElement.hasHiddenParent;\n\n      if (!skipElement) {\n        isReferencedFieldSatisfied = Condition.shouldElementBeVisibleRecursive(referencedElement, record, values, cache);\n      }\n    }\n\n    return this._isSatisfied(record, values, isReferencedFieldSatisfied);\n  }\n\n  _isSatisfied(record, values, isReferencedFieldSatisfied) {\n    let formValue = null;\n\n    // if all of this field's conditions aren't also satisfied, treat the value as nil (empty). This has the same\n    // effect as 'clearing' invisible values by treating them as blank when their conditions aren't met, regardless\n    // of the actual preserved value in the field. If a field is invisible, its value is always nil with respect\n    // to condition logic.\n\n    if (isReferencedFieldSatisfied) {\n      formValue = Condition.valueForCondition(this, values, record);\n    }\n\n    switch (this.operator) {\n      case 'equal_to':\n        return Condition.isEqual(formValue, this.value);\n\n      case 'not_equal_to':\n        return !Condition.isEqual(formValue, this.value);\n\n      case 'is_empty':\n        return Condition.isEmpty(formValue);\n\n      case 'is_not_empty':\n        return !Condition.isEmpty(formValue);\n\n      case 'contains':\n        return Condition.contains(formValue, this.value);\n\n      case 'starts_with':\n        return Condition.startsWith(formValue, this.value);\n\n      case 'greater_than':\n        return Condition.isGreaterThan(formValue, this.value);\n\n      case 'less_than':\n        return Condition.isLessThan(formValue, this.value);\n\n      default:\n        break;\n    }\n\n    return true;\n  }\n}\n"],"mappings":"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"}