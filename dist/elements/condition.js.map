{"version":3,"file":"condition.js","names":["Condition","element","attributes","fieldKey","field_key","operator","value","isEqual","formValue","stringValue","TextUtils","isEmpty","contains","startsWith","isLessThan","isGreaterThan","shouldElementBeVisible","record","values","visibilityCache","key","cache","shouldBeVisible","shouldElementBeVisibleRecursive","isSectionElement","hasVisibleChildren","elements","childElement","visible","overrideIsHidden","isHidden","hasHiddenParent","hasVisibilityConditions","visibleConditionsType","visibleConditions","condition","isSatisfied","parentsVisible","iterator","parent","parentVisible","result","shouldElementBeRequired","hasRequiredConditions","overrideIsRequired","isRequired","shouldBeRequired","requiredConditionsType","requiredConditions","valueForCondition","statusValue","get","elementForCondition","form","elementsByKey","toJSON","referencedElement","isReferencedFieldSatisfied","skipElement","_isSatisfied"],"sources":["../../src/elements/condition.js"],"sourcesContent":["import TextUtils from '../utils/text-utils';\n\nexport default class Condition {\n  constructor(element, attributes) {\n    this.element = element;\n    this.fieldKey = attributes.field_key;\n    this.operator = attributes.operator;\n    this.value = attributes.value;\n  }\n\n  static isEqual(formValue, stringValue) {\n    if (formValue == null) {\n      return TextUtils.isEmpty(stringValue);\n    }\n    return formValue.isEqual(stringValue);\n  }\n\n  static isEmpty(formValue) {\n    return formValue == null || formValue.isEmpty;\n  }\n\n  static contains(formValue, stringValue) {\n    if (formValue == null) {\n      return TextUtils.isEmpty(stringValue);\n    }\n    return formValue.contains(stringValue);\n  }\n\n  static startsWith(formValue, stringValue) {\n    if (formValue == null) {\n      return TextUtils.isEmpty(stringValue);\n    }\n    return formValue.startsWith(stringValue);\n  }\n\n  static isLessThan(formValue, stringValue) {\n    if (formValue == null) {\n      return TextUtils.isEmpty(stringValue);\n    }\n    return formValue.isLessThan(stringValue);\n  }\n\n  static isGreaterThan(formValue, stringValue) {\n    if (formValue == null) {\n      return TextUtils.isEmpty(stringValue);\n    }\n    return formValue.isGreaterThan(stringValue);\n  }\n\n  static shouldElementBeVisible(element, record, values, visibilityCache) {\n    if (visibilityCache != null && visibilityCache[element.key] != null) {\n      return visibilityCache[element.key];\n    }\n\n    const cache = visibilityCache || {};\n\n    let shouldBeVisible = Condition.shouldElementBeVisibleRecursive(element, record, values, cache);\n\n    if (element.isSectionElement) {\n      let hasVisibleChildren = false;\n\n      for (const childElement of element.elements) {\n        const visible = Condition.shouldElementBeVisibleRecursive(childElement, record, values, cache);\n\n        if (visible) {\n          hasVisibleChildren = true;\n          break;\n        }\n      }\n\n      shouldBeVisible = shouldBeVisible && hasVisibleChildren;\n    }\n\n    return shouldBeVisible;\n  }\n\n  static shouldElementBeVisibleRecursive(element, record, values, cache) {\n    if (cache != null && cache[element.key] != null) {\n      return cache[element.key];\n    }\n\n    // break circular conditions by assigning an early `true` value so if this\n    // method is re-entered again for the same element before the recursion\n    // ends, it early exits instead of blowing the stack\n    cache[element.key] = true;\n\n    // if the override value is set, always return it (SETHIDDEN() always wins)\n    if (element.overrideIsHidden != null) {\n      cache[element.key] = !element.isHidden;\n      return !element.isHidden;\n    }\n\n    if (element.isHidden || element.hasHiddenParent) {\n      cache[element.key] = false;\n      return false;\n    }\n\n    let shouldBeVisible = false;\n\n    if (!element.hasVisibilityConditions) {\n      shouldBeVisible = true;\n    }\n\n    if (element.visibleConditionsType === 'any') {\n      for (const condition of element.visibleConditions) {\n        const isSatisfied = condition.isSatisfied(record, values, cache);\n\n        if (isSatisfied) {\n          shouldBeVisible = true;\n          break;\n        }\n      }\n    } else if (element.visibleConditionsType === 'all') {\n      shouldBeVisible = true;\n\n      for (const condition of element.visibleConditions) {\n        const isSatisfied = condition.isSatisfied(record, values, cache);\n\n        if (!isSatisfied) {\n          shouldBeVisible = false;\n        }\n      }\n    }\n\n    // Make sure all parent elements are also visible according to these same rules.\n    // If a section is hidden because of a rule, all child elements are implicitly hidden\n    // and should return NO from this method. This makes it very easy to determine value relevance\n    // by looking at only the field values without having to worry about Section elements and\n    // dependencies. See clearInvisibleValuesWithConditionValues for usage of this method that\n    // relies on this behavior.\n\n    let parentsVisible = true;\n\n    let iterator = element.parent;\n\n    while (iterator != null) {\n      const parentVisible = Condition.shouldElementBeVisibleRecursive(iterator, record, values, cache);\n\n      if (!parentVisible) {\n        parentsVisible = false;\n        break;\n      }\n\n      iterator = iterator.parent;\n    }\n\n    const result = parentsVisible && shouldBeVisible;\n\n    cache[element.key] = result;\n\n    return result;\n  }\n\n  static shouldElementBeRequired(element, record, values) {\n    // If there are no conditions, or if the override value is set, always return\n    // the current required flag. (SETREQUIRED() always wins)\n    if (!element.hasRequiredConditions || element.overrideIsRequired != null) {\n      return element.isRequired;\n    }\n\n    const cache = {};\n\n    let shouldBeRequired = false;\n\n    if (element.requiredConditionsType === 'any') {\n      for (const condition of element.requiredConditions) {\n        const isSatisfied = condition.isSatisfied(record, values, cache);\n\n        if (isSatisfied) {\n          shouldBeRequired = true;\n          break;\n        }\n      }\n    } else if (element.requiredConditionsType === 'all') {\n      shouldBeRequired = true;\n\n      for (const condition of element.requiredConditions) {\n        const isSatisfied = condition.isSatisfied(record, values, cache);\n\n        if (!isSatisfied) {\n          shouldBeRequired = false;\n          break;\n        }\n      }\n    }\n\n    return shouldBeRequired;\n  }\n\n  static valueForCondition(condition, values, record) {\n    if (condition.fieldKey === '@status') {\n      return record.statusValue;\n    }\n\n    return values.get(condition.fieldKey);\n  }\n\n  static elementForCondition(condition, record) {\n    if (condition.fieldKey === '@status') {\n      return record.statusValue.element;\n    }\n    return record.form.elementsByKey[condition.fieldKey];\n  }\n\n  toJSON() {\n    return {\n      field_key: this.fieldKey,\n      operator: this.operator,\n      value: this.value\n    };\n  }\n\n  isSatisfied(record, values, cache) {\n    const referencedElement = Condition.elementForCondition(this, record);\n\n    let isReferencedFieldSatisfied = true;\n\n    if (referencedElement != null) {\n      // If the referenced element or one its parents is explicitly marked as hidden, it's a special\n      // case and the referenced element should always be considered satisfied so that it's possible\n      // to put conditions on explicitly hidden values.\n\n      const skipElement = referencedElement.isHidden || referencedElement.hasHiddenParent;\n\n      if (!skipElement) {\n        isReferencedFieldSatisfied = Condition.shouldElementBeVisibleRecursive(referencedElement, record, values, cache);\n      }\n    }\n\n    return this._isSatisfied(record, values, isReferencedFieldSatisfied);\n  }\n\n  _isSatisfied(record, values, isReferencedFieldSatisfied) {\n    let formValue = null;\n\n    // if all of this field's conditions aren't also satisfied, treat the value as nil (empty). This has the same\n    // effect as 'clearing' invisible values by treating them as blank when their conditions aren't met, regardless\n    // of the actual preserved value in the field. If a field is invisible, its value is always nil with respect\n    // to condition logic.\n\n    if (isReferencedFieldSatisfied) {\n      formValue = Condition.valueForCondition(this, values, record);\n    }\n\n    switch (this.operator) {\n      case 'equal_to':\n        return Condition.isEqual(formValue, this.value);\n\n      case 'not_equal_to':\n        return !Condition.isEqual(formValue, this.value);\n\n      case 'is_empty':\n        return Condition.isEmpty(formValue);\n\n      case 'is_not_empty':\n        return !Condition.isEmpty(formValue);\n\n      case 'contains':\n        return Condition.contains(formValue, this.value);\n\n      case 'starts_with':\n        return Condition.startsWith(formValue, this.value);\n\n      case 'greater_than':\n        return Condition.isGreaterThan(formValue, this.value);\n\n      case 'less_than':\n        return Condition.isLessThan(formValue, this.value);\n\n      default:\n        break;\n    }\n\n    return true;\n  }\n}\n"],"mappings":"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"}