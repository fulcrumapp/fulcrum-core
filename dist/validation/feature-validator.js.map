{"version":3,"file":"feature-validator.js","names":["FeatureValidator","validateFeature","feature","record","formValues","Record","validateRecord","RepeatableItemValue","validateRepeatableItem","errors","isStatusFieldEnabled","status","push","RequiredFieldValidationError","form","statusField","statusForValue","CustomValidationError","isGeometryRequired","hasCoordinate","GeometryRequiredValidationError","cache","validateFieldsInElements","elements","repeatableItem","element","visibilityCache","isSectionElement","visible","Condition","shouldElementBeVisible","required","shouldElementBeRequired","disabled","isDisabled","validatable","fieldValue","get","key","error","validateRequiredField","isTextElement","isNumeric","textValue","validateNumericField","hasPattern","validatePatternOfElement","isDateElement","validateDateField","isTimeElement","validateTimeField","isLengthValidationSupported","validateLengthForElement","isRepeatableElement","repeatableValue","items","item","itemValues","copy","merge","value","isEmpty","regex","RegExp","pattern","test","PatternValidationError","hasMinLengthError","hasMaxLengthError","hasMinLength","length","minLength","hasMaxLength","maxLength","LengthValidationError","NumericFormatValidationError","decimalSeparator","isIntegerFormat","indexOf","numberValue","hasMin","min","hasMax","max","NumericRangeValidationError","isValid","DateFormatValidationError","TimeFormatValidationError","formatErrors","messages","message","join"],"sources":["../../src/validation/feature-validator.js"],"sourcesContent":["import RepeatableItemValue from '../values/repeatable-item-value';\nimport Record from '../record';\nimport Condition from '../elements/condition';\nimport CustomValidationError from './custom-validation-error';\nimport RequiredFieldValidationError from './required-field-validation-error';\nimport GeometryRequiredValidationError from './geometry-required-validation-error';\nimport PatternValidationError from './pattern-validation-error';\nimport LengthValidationError from './length-validation-error';\nimport NumericFormatValidationError from './numeric-format-validation-error';\nimport NumericRangeValidationError from './numeric-range-validation-error';\nimport DateFormatValidationError from './date-format-validation-error';\nimport TimeFormatValidationError from './time-format-validation-error';\n\nexport default class FeatureValidator {\n  static validateFeature(feature, record, formValues) {\n    if (feature instanceof Record) {\n      return FeatureValidator.validateRecord(record, formValues);\n    } else if (feature instanceof RepeatableItemValue) {\n      return FeatureValidator.validateRepeatableItem(feature, record, formValues);\n    }\n\n    return [];\n  }\n\n  static validateRecord(record, formValues) {\n    if (record == null) {\n      return [];\n    }\n\n    const errors = [];\n\n    if (record.isStatusFieldEnabled) {\n      if (record.status == null) {\n        errors.push(new RequiredFieldValidationError(record.form.statusField));\n      } else if (record.form.statusField.statusForValue(record.status) == null) {\n        errors.push(new CustomValidationError(`${record.status} is not a valid status.`));\n      }\n    }\n\n    if (record.form.isGeometryRequired) {\n      if (!record.hasCoordinate) {\n        errors.push(new GeometryRequiredValidationError());\n      }\n    }\n\n    const cache = {};\n\n    this.validateFieldsInElements(record.form.elements, record, formValues, errors, cache);\n\n    return errors;\n  }\n\n  static validateRepeatableItem(repeatableItem, record, formValues) {\n    if (repeatableItem == null) {\n      return [];\n    }\n\n    const errors = [];\n\n    if (repeatableItem.element.isGeometryRequired) {\n      if (!repeatableItem.hasCoordinate) {\n        errors.push(new GeometryRequiredValidationError());\n      }\n    }\n\n    const cache = {};\n\n    FeatureValidator.validateFieldsInElements(repeatableItem.element.elements, record, formValues, errors, cache);\n\n    return errors;\n  }\n\n  static validateFieldsInElements(elements, record, formValues, errors, visibilityCache) {\n    const cache = visibilityCache || {};\n\n    for (const element of elements) {\n      if (element.isSectionElement) {\n        const visible = Condition.shouldElementBeVisible(element, record, formValues, cache);\n\n        if (visible) {\n          FeatureValidator.validateFieldsInElements(element.elements, record, formValues, errors, cache);\n        }\n      } else {\n        const required = Condition.shouldElementBeRequired(element, record, formValues);\n        const visible = Condition.shouldElementBeVisible(element, record, formValues, cache);\n\n        const disabled = element.isDisabled;\n\n        const validatable = (visible && !disabled);\n\n        if (validatable) {\n          if (required) {\n            const fieldValue = formValues.get(element.key);\n\n            const error = FeatureValidator.validateRequiredField(element, fieldValue);\n\n            if (error) {\n              errors.push(error);\n            }\n          }\n\n          if (element.isTextElement) {\n            if (element.isNumeric) {\n              const textValue = formValues.get(element.key);\n\n              const error = FeatureValidator.validateNumericField(element, textValue);\n\n              if (error) {\n                errors.push(error);\n              }\n            } else if (element.hasPattern) {\n              const textValue = formValues.get(element.key);\n\n              const error = FeatureValidator.validatePatternOfElement(element, textValue);\n\n              if (error) {\n                errors.push(error);\n              }\n            }\n          }\n\n          if (element.isDateElement) {\n            const error = FeatureValidator.validateDateField(element, formValues.get(element.key));\n\n            if (error) {\n              errors.push(error);\n            }\n          }\n\n          if (element.isTimeElement) {\n            const error = FeatureValidator.validateTimeField(element, formValues.get(element.key));\n\n            if (error) {\n              errors.push(error);\n            }\n          }\n\n          if (element.isLengthValidationSupported) {\n            const fieldValue = formValues.get(element.key);\n            const error = FeatureValidator.validateLengthForElement(element, fieldValue);\n\n            if (error) {\n              errors.push(error);\n            }\n          }\n        }\n\n        if (element.isRepeatableElement) {\n          const repeatableValue = formValues.get(element.key);\n\n          if (repeatableValue) {\n            for (const item of repeatableValue.items) {\n              const itemValues = item.formValues.copy();\n\n              itemValues.merge(formValues);\n\n              FeatureValidator.validateFieldsInElements(item.element.elements, record, itemValues, errors, null);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  static validateRequiredField(element, value) {\n    if (value == null || value.isEmpty) {\n      return new RequiredFieldValidationError(element);\n    }\n\n    return null;\n  }\n\n  static validatePatternOfElement(element, value) {\n    if (value == null || value.isEmpty) {\n      return null;\n    }\n\n    const regex = new RegExp('^(?:' + element.pattern + ')$');\n\n    if (regex) {\n      if (!regex.test(value.textValue)) {\n        return new PatternValidationError(element);\n      }\n    }\n\n    return null;\n  }\n\n  static validateLengthForElement(element, value) {\n    if (value == null || value.isEmpty) {\n      return null;\n    }\n\n    let hasMinLengthError = false;\n    let hasMaxLengthError = false;\n\n    if (element.hasMinLength) {\n      hasMinLengthError = (value.length < element.minLength);\n    }\n\n    if (element.hasMaxLength) {\n      hasMaxLengthError = (value.length > element.maxLength);\n    }\n\n    if (hasMinLengthError || hasMaxLengthError) {\n      return new LengthValidationError(element);\n    }\n\n    return null;\n  }\n\n  static validateNumericField(element, value) {\n    if (value == null || value.isEmpty) {\n      return null;\n    }\n\n    if (!value.isNumeric) {\n      return new NumericFormatValidationError(element);\n    }\n\n    // since the number is now normalized to en_US, check for the . separator\n    const decimalSeparator = '.';\n\n    if (element.isIntegerFormat) {\n      if (value.textValue.indexOf(decimalSeparator) > -1) {\n        return new NumericFormatValidationError(element);\n      }\n    }\n\n    const numberValue = +value.textValue;\n\n    if ((element.hasMin && numberValue < element.min) || (element.hasMax && numberValue > element.max)) {\n      return new NumericRangeValidationError(element);\n    }\n\n    return null;\n  }\n\n  static validateDateField(element, value) {\n    if (value == null || value.isEmpty) {\n      return null;\n    }\n\n    if (!value.isValid) {\n      return new DateFormatValidationError(element);\n    }\n\n    return null;\n  }\n\n  static validateTimeField(element, value) {\n    if (value == null || value.isEmpty) {\n      return null;\n    }\n\n    if (!value.isValid) {\n      return new TimeFormatValidationError(element);\n    }\n\n    return null;\n  }\n\n  static formatErrors(errors) {\n    const messages = [];\n\n    for (const error of errors) {\n      messages.push(error.message);\n    }\n\n    return messages.join('\\n\\n');\n  }\n}\n"],"mappings":"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"}