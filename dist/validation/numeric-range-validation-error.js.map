{"version":3,"file":"numeric-range-validation-error.js","names":["NumericRangeValidationError","message","fieldLabel","label","element","hasMin","hasMax","format","min","max","ElementValidationError"],"sources":["../../src/validation/numeric-range-validation-error.js"],"sourcesContent":["import ElementValidationError from './element-validation-error';\nimport {format} from 'util';\n\nexport default class NumericRangeValidationError extends ElementValidationError {\n  get message() {\n    let message = null;\n\n    const fieldLabel = this.label;\n\n    if (this.element.hasMin && this.element.hasMax) {\n      message = format(\"The value of field '%s' must be between %s and %s.\",\n                       fieldLabel,\n                       this.element.min,\n                       this.element.max);\n    } else if (this.element.hasMin) {\n      message = format(\"The value of field '%s' must be greater than or equal to %s.\",\n                       fieldLabel,\n                       this.element.min);\n    } else {\n      message = format(\"The value of field '%s' must be less than or equal to %s.\",\n                       fieldLabel,\n                       this.element.max);\n    }\n\n    return message;\n  }\n}\n"],"mappings":";;;;AAAA;AACA;AAA4B;AAAA;AAAA;AAAA;AAAA;AAAA,IAEPA,2BAA2B;EAAA;EAAA;IAAA;EAAA;EAAA;IAAA;IAAA,KAC9C,eAAc;MACZ,IAAIC,OAAO,GAAG,IAAI;MAElB,IAAMC,UAAU,GAAG,IAAI,CAACC,KAAK;MAE7B,IAAI,IAAI,CAACC,OAAO,CAACC,MAAM,IAAI,IAAI,CAACD,OAAO,CAACE,MAAM,EAAE;QAC9CL,OAAO,GAAG,IAAAM,YAAM,EAAC,oDAAoD,EACpDL,UAAU,EACV,IAAI,CAACE,OAAO,CAACI,GAAG,EAChB,IAAI,CAACJ,OAAO,CAACK,GAAG,CAAC;MACpC,CAAC,MAAM,IAAI,IAAI,CAACL,OAAO,CAACC,MAAM,EAAE;QAC9BJ,OAAO,GAAG,IAAAM,YAAM,EAAC,8DAA8D,EAC9DL,UAAU,EACV,IAAI,CAACE,OAAO,CAACI,GAAG,CAAC;MACpC,CAAC,MAAM;QACLP,OAAO,GAAG,IAAAM,YAAM,EAAC,2DAA2D,EAC3DL,UAAU,EACV,IAAI,CAACE,OAAO,CAACK,GAAG,CAAC;MACpC;MAEA,OAAOR,OAAO;IAChB;EAAC;EAAA;AAAA,EAtBsDS,kCAAsB;AAAA"}