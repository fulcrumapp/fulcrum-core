{"version":3,"sources":["../../src/validation/numeric-range-validation-error.js"],"names":["NumericRangeValidationError","message","fieldLabel","label","element","hasMin","hasMax","min","max","ElementValidationError"],"mappings":";;;;;AAAA;;AACA;;;;;;;;;;IAEqBA,2B;;;;;;;;;;;wBACL;AACZ,UAAIC,OAAO,GAAG,IAAd;AAEA,UAAMC,UAAU,GAAG,KAAKC,KAAxB;;AAEA,UAAI,KAAKC,OAAL,CAAaC,MAAb,IAAuB,KAAKD,OAAL,CAAaE,MAAxC,EAAgD;AAC9CL,QAAAA,OAAO,GAAG,kBAAO,oDAAP,EACOC,UADP,EAEO,KAAKE,OAAL,CAAaG,GAFpB,EAGO,KAAKH,OAAL,CAAaI,GAHpB,CAAV;AAID,OALD,MAKO,IAAI,KAAKJ,OAAL,CAAaC,MAAjB,EAAyB;AAC9BJ,QAAAA,OAAO,GAAG,kBAAO,8DAAP,EACOC,UADP,EAEO,KAAKE,OAAL,CAAaG,GAFpB,CAAV;AAGD,OAJM,MAIA;AACLN,QAAAA,OAAO,GAAG,kBAAO,2DAAP,EACOC,UADP,EAEO,KAAKE,OAAL,CAAaI,GAFpB,CAAV;AAGD;;AAED,aAAOP,OAAP;AACD;;;;EAtBsDQ,kC","sourcesContent":["import ElementValidationError from './element-validation-error';\nimport {format} from 'util';\n\nexport default class NumericRangeValidationError extends ElementValidationError {\n  get message() {\n    let message = null;\n\n    const fieldLabel = this.label;\n\n    if (this.element.hasMin && this.element.hasMax) {\n      message = format(\"The value of field '%s' must be between %s and %s.\",\n                       fieldLabel,\n                       this.element.min,\n                       this.element.max);\n    } else if (this.element.hasMin) {\n      message = format(\"The value of field '%s' must be greater than or equal to %s.\",\n                       fieldLabel,\n                       this.element.min);\n    } else {\n      message = format(\"The value of field '%s' must be less than or equal to %s.\",\n                       fieldLabel,\n                       this.element.max);\n    }\n\n    return message;\n  }\n}\n"],"file":"numeric-range-validation-error.js"}