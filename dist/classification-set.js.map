{"version":3,"file":"classification-set.js","names":["ClassificationSet","attributes","updateFromAPIAttributes","attrs","_id","id","_name","name","_description","description","_itemsJSON","items","_version","version","_createdAt","DateUtils","parseISOTimestamp","created_at","_updatedAt","updated_at","toJSON","json","formatISOTimestamp","createdAt","updatedAt","_items","item","push","Classification"],"sources":["../src/classification-set.js"],"sourcesContent":["import Classification from './elements/classification';\nimport DateUtils from './utils/date-utils';\n\nexport default class ClassificationSet {\n  constructor(attributes) {\n    this.updateFromAPIAttributes(attributes);\n  }\n\n  updateFromAPIAttributes(attrs) {\n    const attributes = attrs || {};\n\n    this._id = attributes.id;\n    this._name = attributes.name;\n    this._description = attributes.description;\n    this._itemsJSON = attributes.items || [];\n    this._version = attributes.version;\n    this._createdAt = DateUtils.parseISOTimestamp(attributes.created_at);\n    this._updatedAt = DateUtils.parseISOTimestamp(attributes.updated_at);\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  get name() {\n    return this._name;\n  }\n\n  get description() {\n    return this._description;\n  }\n\n  get version() {\n    return this._version;\n  }\n\n  get createdAt() {\n    return this._createdAt;\n  }\n\n  get updatedAt() {\n    return this._updatedAt;\n  }\n\n  get items() {\n    if (!this._items) {\n      this._items = [];\n\n      for (const item of this._itemsJSON) {\n        this._items.push(new Classification(null, item));\n      }\n    }\n\n    return this._items;\n  }\n\n  toJSON() {\n    const json = {};\n\n    json.id = this.id || null;\n    json.name = this.name || null;\n    json.description = this.description || null;\n    json.items = this._itemsJSON || null;\n    json.version = this.version;\n    json.created_at = DateUtils.formatISOTimestamp(this.createdAt);\n    json.updated_at = DateUtils.formatISOTimestamp(this.updatedAt);\n\n    return json;\n  }\n}\n"],"mappings":";;;;AAAA;AACA;AAA2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAEtBA,iBAAiB;EACpC,2BAAYC,UAAU,EAAE;IACtB,IAAI,CAACC,uBAAuB,CAACD,UAAU,CAAC;EAC1C;EAAC;EAAA,OAEDC,uBAAuB,GAAvB,iCAAwBC,KAAK,EAAE;IAC7B,IAAMF,UAAU,GAAGE,KAAK,IAAI,CAAC,CAAC;IAE9B,IAAI,CAACC,GAAG,GAAGH,UAAU,CAACI,EAAE;IACxB,IAAI,CAACC,KAAK,GAAGL,UAAU,CAACM,IAAI;IAC5B,IAAI,CAACC,YAAY,GAAGP,UAAU,CAACQ,WAAW;IAC1C,IAAI,CAACC,UAAU,GAAGT,UAAU,CAACU,KAAK,IAAI,EAAE;IACxC,IAAI,CAACC,QAAQ,GAAGX,UAAU,CAACY,OAAO;IAClC,IAAI,CAACC,UAAU,GAAGC,qBAAS,CAACC,iBAAiB,CAACf,UAAU,CAACgB,UAAU,CAAC;IACpE,IAAI,CAACC,UAAU,GAAGH,qBAAS,CAACC,iBAAiB,CAACf,UAAU,CAACkB,UAAU,CAAC;EACtE,CAAC;EAAA,OAsCDC,MAAM,GAAN,kBAAS;IACP,IAAMC,IAAI,GAAG,CAAC,CAAC;IAEfA,IAAI,CAAChB,EAAE,GAAG,IAAI,CAACA,EAAE,IAAI,IAAI;IACzBgB,IAAI,CAACd,IAAI,GAAG,IAAI,CAACA,IAAI,IAAI,IAAI;IAC7Bc,IAAI,CAACZ,WAAW,GAAG,IAAI,CAACA,WAAW,IAAI,IAAI;IAC3CY,IAAI,CAACV,KAAK,GAAG,IAAI,CAACD,UAAU,IAAI,IAAI;IACpCW,IAAI,CAACR,OAAO,GAAG,IAAI,CAACA,OAAO;IAC3BQ,IAAI,CAACJ,UAAU,GAAGF,qBAAS,CAACO,kBAAkB,CAAC,IAAI,CAACC,SAAS,CAAC;IAC9DF,IAAI,CAACF,UAAU,GAAGJ,qBAAS,CAACO,kBAAkB,CAAC,IAAI,CAACE,SAAS,CAAC;IAE9D,OAAOH,IAAI;EACb,CAAC;EAAA;IAAA;IAAA,KAhDD,eAAS;MACP,OAAO,IAAI,CAACjB,GAAG;IACjB;EAAC;IAAA;IAAA,KAED,eAAW;MACT,OAAO,IAAI,CAACE,KAAK;IACnB;EAAC;IAAA;IAAA,KAED,eAAkB;MAChB,OAAO,IAAI,CAACE,YAAY;IAC1B;EAAC;IAAA;IAAA,KAED,eAAc;MACZ,OAAO,IAAI,CAACI,QAAQ;IACtB;EAAC;IAAA;IAAA,KAED,eAAgB;MACd,OAAO,IAAI,CAACE,UAAU;IACxB;EAAC;IAAA;IAAA,KAED,eAAgB;MACd,OAAO,IAAI,CAACI,UAAU;IACxB;EAAC;IAAA;IAAA,KAED,eAAY;MACV,IAAI,CAAC,IAAI,CAACO,MAAM,EAAE;QAChB,IAAI,CAACA,MAAM,GAAG,EAAE;QAEhB,qDAAmB,IAAI,CAACf,UAAU,wCAAE;UAAA,IAAzBgB,IAAI;UACb,IAAI,CAACD,MAAM,CAACE,IAAI,CAAC,IAAIC,0BAAc,CAAC,IAAI,EAAEF,IAAI,CAAC,CAAC;QAClD;MACF;MAEA,OAAO,IAAI,CAACD,MAAM;IACpB;EAAC;EAAA;AAAA;AAAA"}