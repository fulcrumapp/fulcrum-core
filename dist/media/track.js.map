{"version":3,"file":"track.js","names":["Track","id","attributes","_id","_segments","Array","isArray","tracks","track","_attributes","trackSegment","segment","TrackSegment","points","length","push","_toLineSegments","lines","segments","line","point","hasCoordinate","longitude","latitude","time","toGPX","GPX","render","toKML","KML","toSRT","SRT","toJSONString","JSON","stringify","toGeoJSONString","lineString","toGeoJSONMultiLineString","features","type","toGeoJSONLines","_geoJSONLines","properties","geometry","coordinates","_geoJSONMultiLineString","toGeoJSONSegments","_geoJSONSegments","previousPoint","firstLocation","firstSegment","lastSegment","lastLocation","firstPoint","lastPoint"],"sources":["../../src/media/track.js"],"sourcesContent":["import TrackSegment from './track-segment';\nimport GPX from './gpx';\nimport KML from './kml';\nimport SRT from './srt';\n\nexport default class Track {\n  constructor(id, attributes) {\n    this._id = id;\n    this._segments = [];\n\n    if (Array.isArray(attributes)) {\n      attributes = {tracks: [ {track: attributes} ]};\n    }\n\n    this._attributes = attributes;\n\n    if (attributes.tracks) {\n      for (const trackSegment of attributes.tracks) {\n        const segment = new TrackSegment(trackSegment);\n\n        if (segment.points.length) {\n          this._segments.push(segment);\n        }\n      }\n    }\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  get isValid() {\n    return this.firstLocation != null;\n  }\n\n  get segments() {\n    return this._segments;\n  }\n\n  get firstSegment() {\n    return this._segments[0];\n  }\n\n  get lastSegment() {\n    return this._segments[this._segments.length - 1];\n  }\n\n  get firstLocation() {\n    return this.firstSegment && this.firstSegment.firstLocation;\n  }\n\n  get lastLocation() {\n    return this.lastSegment && this.lastSegment.lastLocation;\n  }\n\n  get firstPoint() {\n    return this.firstSegment && this.firstSegment.firstPoint;\n  }\n\n  get lastPoint() {\n    return this.lastSegment && this.lastSegment.lastPoint;\n  }\n\n  get representativePoint() {\n    if (this.firstSegment) {\n      return this.toGeoJSONLines().geometry.coordinates[0];\n    }\n\n    return null;\n  }\n\n  _toLineSegments() {\n    const lines = [];\n\n    for (const segment of this.segments) {\n      const line = [];\n\n      for (const point of segment.points) {\n        if (point.hasCoordinate) {\n          line.push([ point.longitude, point.latitude, point.time ]);\n        }\n      }\n\n      if (line.length > 1) {\n        lines.push(line);\n      }\n    }\n\n    return lines;\n  }\n\n  toGPX() {\n    return GPX.render([ this ]);\n  }\n\n  toKML() {\n    return KML.render([ this ]);\n  }\n\n  toSRT() {\n    return SRT.render([ this ]);\n  }\n\n  toJSONString() {\n    return JSON.stringify(this._attributes);\n  }\n\n  toGeoJSONString() {\n    const lineString = this.toGeoJSONMultiLineString();\n\n    const features = lineString ? [ lineString ] : [];\n\n    return JSON.stringify({\n      type: 'FeatureCollection',\n      features: features\n    });\n  }\n\n  toGeoJSONLines() {\n    if (this._geoJSONLines) {\n      return this._geoJSONLines;\n    }\n\n    const lines = this._toLineSegments();\n\n    this._geoJSONLines = {\n      type: 'Feature',\n      properties: {},\n      geometry: {\n        type: 'LineString',\n        coordinates: lines[0]\n      }\n    };\n\n    return this._geoJSONLines;\n  }\n\n  toGeoJSONMultiLineString() {\n    if (this._geoJSONMultiLineString) {\n      return this._geoJSONMultiLineString;\n    }\n\n    const lines = this._toLineSegments();\n\n    if (lines.length === 0) {\n      return null;\n    }\n\n    this._geoJSONMultiLineString = {\n      type: 'Feature',\n      properties: {},\n      geometry: {\n        type: 'MultiLineString',\n        coordinates: lines\n      }\n    };\n\n    return this._geoJSONMultiLineString;\n  }\n\n  toGeoJSONSegments() {\n    if (this._geoJSONSegments) {\n      return this._geoJSONSegments;\n    }\n\n    const lines = [];\n\n    let previousPoint = null;\n\n    for (const segment of this.segments) {\n      for (const point of segment.points) {\n        if (point.hasCoordinate) {\n          if (previousPoint) {\n            lines.push({\n              type: 'Feature',\n              properties: {\n                time: point.time\n              },\n              geometry: {\n                type: 'LineString',\n                coordinates: [\n                  [ previousPoint.longitude, previousPoint.latitude ],\n                  [ point.longitude, point.latitude ]\n                ]\n              }\n            });\n          }\n\n          previousPoint = point;\n        }\n      }\n    }\n\n    this._geoJSONSegments = {\n      type: 'FeatureCollection',\n      features: lines\n    };\n\n    return this._geoJSONSegments;\n  }\n}\n"],"mappings":"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"}