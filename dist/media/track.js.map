{"version":3,"file":"track.js","names":["Track","id","attributes","_id","_segments","Array","isArray","tracks","track","_attributes","trackSegment","segment","TrackSegment","points","length","push","_toLineSegments","lines","segments","line","point","hasCoordinate","longitude","latitude","time","toGPX","GPX","render","toKML","KML","toSRT","SRT","toJSONString","JSON","stringify","toGeoJSONString","lineString","toGeoJSONMultiLineString","features","type","toGeoJSONLines","_geoJSONLines","properties","geometry","coordinates","_geoJSONMultiLineString","toGeoJSONSegments","_geoJSONSegments","previousPoint","firstLocation","firstSegment","lastSegment","lastLocation","firstPoint","lastPoint"],"sources":["../../src/media/track.js"],"sourcesContent":["import TrackSegment from './track-segment';\nimport GPX from './gpx';\nimport KML from './kml';\nimport SRT from './srt';\n\nexport default class Track {\n  constructor(id, attributes) {\n    this._id = id;\n    this._segments = [];\n\n    if (Array.isArray(attributes)) {\n      attributes = {tracks: [ {track: attributes} ]};\n    }\n\n    this._attributes = attributes;\n\n    if (attributes.tracks) {\n      for (const trackSegment of attributes.tracks) {\n        const segment = new TrackSegment(trackSegment);\n\n        if (segment.points.length) {\n          this._segments.push(segment);\n        }\n      }\n    }\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  get isValid() {\n    return this.firstLocation != null;\n  }\n\n  get segments() {\n    return this._segments;\n  }\n\n  get firstSegment() {\n    return this._segments[0];\n  }\n\n  get lastSegment() {\n    return this._segments[this._segments.length - 1];\n  }\n\n  get firstLocation() {\n    return this.firstSegment && this.firstSegment.firstLocation;\n  }\n\n  get lastLocation() {\n    return this.lastSegment && this.lastSegment.lastLocation;\n  }\n\n  get firstPoint() {\n    return this.firstSegment && this.firstSegment.firstPoint;\n  }\n\n  get lastPoint() {\n    return this.lastSegment && this.lastSegment.lastPoint;\n  }\n\n  get representativePoint() {\n    if (this.firstSegment) {\n      return this.toGeoJSONLines().geometry.coordinates[0];\n    }\n\n    return null;\n  }\n\n  _toLineSegments() {\n    const lines = [];\n\n    for (const segment of this.segments) {\n      const line = [];\n\n      for (const point of segment.points) {\n        if (point.hasCoordinate) {\n          line.push([ point.longitude, point.latitude, point.time ]);\n        }\n      }\n\n      if (line.length > 1) {\n        lines.push(line);\n      }\n    }\n\n    return lines;\n  }\n\n  toGPX() {\n    return GPX.render([ this ]);\n  }\n\n  toKML() {\n    return KML.render([ this ]);\n  }\n\n  toSRT() {\n    return SRT.render([ this ]);\n  }\n\n  toJSONString() {\n    return JSON.stringify(this._attributes);\n  }\n\n  toGeoJSONString() {\n    const lineString = this.toGeoJSONMultiLineString();\n\n    const features = lineString ? [ lineString ] : [];\n\n    return JSON.stringify({\n      type: 'FeatureCollection',\n      features: features\n    });\n  }\n\n  toGeoJSONLines() {\n    if (this._geoJSONLines) {\n      return this._geoJSONLines;\n    }\n\n    const lines = this._toLineSegments();\n\n    this._geoJSONLines = {\n      type: 'Feature',\n      properties: {},\n      geometry: {\n        type: 'LineString',\n        coordinates: lines[0]\n      }\n    };\n\n    return this._geoJSONLines;\n  }\n\n  toGeoJSONMultiLineString() {\n    if (this._geoJSONMultiLineString) {\n      return this._geoJSONMultiLineString;\n    }\n\n    const lines = this._toLineSegments();\n\n    if (lines.length === 0) {\n      return null;\n    }\n\n    this._geoJSONMultiLineString = {\n      type: 'Feature',\n      properties: {},\n      geometry: {\n        type: 'MultiLineString',\n        coordinates: lines\n      }\n    };\n\n    return this._geoJSONMultiLineString;\n  }\n\n  toGeoJSONSegments() {\n    if (this._geoJSONSegments) {\n      return this._geoJSONSegments;\n    }\n\n    const lines = [];\n\n    let previousPoint = null;\n\n    for (const segment of this.segments) {\n      for (const point of segment.points) {\n        if (point.hasCoordinate) {\n          if (previousPoint) {\n            lines.push({\n              type: 'Feature',\n              properties: {\n                time: point.time\n              },\n              geometry: {\n                type: 'LineString',\n                coordinates: [\n                  [ previousPoint.longitude, previousPoint.latitude ],\n                  [ point.longitude, point.latitude ]\n                ]\n              }\n            });\n          }\n\n          previousPoint = point;\n        }\n      }\n    }\n\n    this._geoJSONSegments = {\n      type: 'FeatureCollection',\n      features: lines\n    };\n\n    return this._geoJSONSegments;\n  }\n}\n"],"mappings":"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"}