{"version":3,"sources":["../../src/media/gpx.js"],"names":["GPX","render","tracks","gpx","push","gpxStart","gpxTracks","gpxEnd","join","trim","timestamp","t","Date","toISOString","map","track","segments","length","gpxTrackStart","gpxTrackSegments","gpxTrackEnd","filter","o","segment","gpxTrackSegmentStart","gpxTrackPoints","gpxTrackSegmentEnd","locations","point","gpxTrackPoint","latitude","longitude","altitude","time","id"],"mappings":"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","sourcesContent":["export default class GPX {\n  static render(tracks) {\n    return new GPX().render(tracks);\n  }\n\n  render(tracks) {\n    const gpx = [];\n\n    gpx.push(this.gpxStart());\n    gpx.push(this.gpxTracks(tracks));\n    gpx.push(this.gpxEnd());\n\n    return gpx.join('\\n').trim();\n  }\n\n  timestamp(t) {\n    if (t == null) {\n      return null;\n    }\n\n    return new Date(+t).toISOString();\n  }\n\n  gpxStart() {\n    return `\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\" ?>\n<gpx xmlns=\"http://www.topografix.com/GPX/1/1\"\n     xmlns:gpxx=\"http://www.garmin.com/xmlschemas/GpxExtensions/v3\"\n     xmlns:gpxtpx=\"http://www.garmin.com/xmlschemas/TrackPointExtension/v1\"\n     xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n     xsi:schemaLocation=\"http://www.topografix.com/GPX/1/1 http://www.topografix.com/GPX/1/1/gpx.xsd http://www.garmin.com/xmlschemas/GpxExtensions/v3 http://www.garmin.com/xmlschemas/GpxExtensionsv3.xsd http://www.garmin.com/xmlschemas/TrackPointExtension/v1 http://www.garmin.com/xmlschemas/TrackPointExtensionv1.xsd\"\n     creator=\"Fulcrum\"\n     version=\"1.1\">\n<metadata>\n  <link href=\"http://fulcrumapp.com\">\n    <text>Fulcrum</text>\n  </link>\n</metadata>\n`;\n  }\n\n  gpxTracks(tracks) {\n    return tracks.map((track) => {\n      if (track.segments.length) {\n        const gpx = [];\n\n        gpx.push(this.gpxTrackStart(track));\n        gpx.push(this.gpxTrackSegments(track));\n        gpx.push(this.gpxTrackEnd(track));\n\n        return gpx.join('\\n');\n      }\n\n      return null;\n    }).filter(o => o).join('\\n');\n  }\n\n  gpxTrackSegments(track) {\n    return track.segments.map((segment) => {\n      const gpx = [];\n\n      gpx.push(this.gpxTrackSegmentStart(track));\n      gpx.push(this.gpxTrackPoints(segment));\n      gpx.push(this.gpxTrackSegmentEnd());\n\n      return gpx.join('\\n');\n    });\n  }\n\n  gpxTrackPoints(track) {\n    return track.locations.map((point) => {\n      return this.gpxTrackPoint(point);\n    }).join('\\n');\n  }\n\n  gpxTrackPoint(point) {\n    return `\n<trkpt lat=\"${point.latitude}\" lon=\"${point.longitude}\">\n<ele>${point.altitude}</ele>\n<time>${this.timestamp(point.time)}</time>\n</trkpt>\n`;\n  }\n\n  gpxTrackStart(track) {\n    return `\n<trk>\n  <name>${track.id}</name>\n`;\n  }\n\n  gpxTrackSegmentStart() {\n    return '<trkseg>';\n  }\n\n  gpxTrackSegmentEnd() {\n    return '</trkseg>';\n  }\n\n  gpxTrackEnd() {\n    return '</trk>';\n  }\n\n  gpxEnd() {\n    return '</gpx>';\n  }\n}\n"],"file":"gpx.js"}