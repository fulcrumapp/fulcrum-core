{"version":3,"file":"track-player.js","names":["TrackPlayer","track","firstSegment","firstTimestamp","firstPoint","time","lastTimestamp","lastSegment","lastPoint","duration","firstTimeStamp","findPreviousTrackPointIndexes","segmentIndex","pointIndex","timestamp","milliseconds","segments","segment","points","point","Math","max","length","findPreviousTrackPoint","findNextTrackPoint","trackTime","nextPoint","nextTimestamp","lastLatitude","latitude","lastLongitude","longitude","nextLatitude","nextLongitude","isLastPointInvalid","isNextPointInvalid","range","percentage","lastLocation","nextLocation","lon","lat","location","headingDiff","viewport","courseDiff","course","accuracyDiff","horizontalAccuracy","lastAltitude","altitude","nextAltitude","lastSpeed","speed","nextSpeed","altitudeDiff","speedDiff","abs","heading","accuracy","prev","next"],"sources":["../../src/media/track-player.js"],"sourcesContent":["export default class TrackPlayer {\n  constructor(track) {\n    this.track = track;\n\n    if (this.track.firstSegment) {\n      this.firstTimestamp = this.track.firstSegment.firstPoint.time;\n      this.lastTimestamp = this.track.lastSegment.lastPoint.time;\n      this.duration = this.lastTimestamp - this.firstTimeStamp;\n    }\n  }\n\n  findPreviousTrackPointIndexes(time) {\n    let segmentIndex = 0;\n    let pointIndex = 0;\n\n    let timestamp = null;\n\n    const milliseconds = time;\n\n    for (const segment of this.track.segments) {\n      for (const point of segment.points) {\n        timestamp = point.time;\n\n        if (timestamp > milliseconds) {\n          return [ segmentIndex, Math.max(0, pointIndex - 1) ];\n        }\n\n        ++pointIndex;\n      }\n\n      ++segmentIndex;\n    }\n\n    // if the video time is beyond the end of the track, return the last index\n    if (milliseconds >= this.lastTimestamp) {\n      return [ this.track.segments.length - 1, this.track.lastSegment.points.length - 1 ];\n    }\n\n    return [ 0, 0 ];\n  }\n\n  findPreviousTrackPoint(time) {\n    const [ segmentIndex, pointIndex ] = this.findPreviousTrackPointIndexes(time);\n    return this.track.segments[segmentIndex].points[pointIndex];\n  }\n\n  findNextTrackPoint(time) {\n    const [ segmentIndex, pointIndex ] = this.findPreviousTrackPointIndexes(time);\n\n    if (pointIndex + 1 < this.track.segments[segmentIndex].points.length) {\n      return this.track.segments[segmentIndex].points[pointIndex + 1];\n    }\n\n    return this.track.segments[segmentIndex].points[pointIndex];\n  }\n\n  point(trackTime) {\n    if (this.track == null || this.track.segments.length === 0) {\n      return null;\n    }\n\n    const time = (trackTime * 1000.0) + this.firstTimestamp;\n\n    const lastPoint = this.findPreviousTrackPoint(time);\n    const nextPoint = this.findNextTrackPoint(time);\n\n    const lastTimestamp = lastPoint.time;\n    const nextTimestamp = nextPoint.time;\n\n    const lastLatitude = lastPoint.latitude;\n    const lastLongitude = lastPoint.longitude;\n\n    const nextLatitude = nextPoint.latitude;\n    const nextLongitude = nextPoint.longitude;\n\n    const isLastPointInvalid = lastLatitude == null || lastLongitude == null;\n    const isNextPointInvalid = nextLatitude == null || nextLongitude == null;\n\n    if (isLastPointInvalid || isNextPointInvalid) {\n      return null;\n    }\n\n    const range = nextTimestamp - lastTimestamp;\n    const percentage = range === 0 ? 0 : (time - lastTimestamp) / range;\n\n    const lastLocation = [ lastPoint.latitude, lastPoint.longitude ];\n    const nextLocation = [ nextPoint.latitude, nextPoint.longitude ];\n\n    const lon = ((nextLocation[1] - lastLocation[1]) * percentage) + lastLocation[1];\n    const lat = ((nextLocation[0] - lastLocation[0]) * percentage) + lastLocation[0];\n\n    const location = [ lat, lon ];\n\n    let headingDiff = nextPoint.viewport - lastPoint.viewport;\n    let courseDiff = nextPoint.course - lastPoint.course;\n\n    const accuracyDiff = nextPoint.horizontalAccuracy - lastPoint.horizontalAccuracy;\n\n    const lastAltitude = lastPoint.altitude;\n    const nextAltitude = nextPoint.altitude;\n\n    const lastSpeed = lastPoint.speed;\n    const nextSpeed = nextPoint.speed;\n\n    let altitudeDiff = null;\n\n    if (lastAltitude != null && nextAltitude != null) {\n      altitudeDiff = nextAltitude - lastAltitude;\n    }\n\n    let speedDiff = null;\n\n    if (lastSpeed != null && nextSpeed != null && lastSpeed > -1 && nextSpeed > -1) {\n      speedDiff = nextSpeed - lastSpeed;\n    }\n\n    /*\n\n    When the diff between the 2 points is greater than 180, we need\n    to reverse the direction of the tweening so it produces the fastest\n    transition between the 2 angles. By negating the different angles we\n    produce a much simpler value.\n\n    Example 1:\n      going from 30 to 350 should produce a -40 degree counterclockwise\n      result, not a 320 clockwise animation\n\n    Example 2:\n      going from 350 to 30 should produce a 40 degree clockwise\n      result, not a 320 counterclockwise animation\n\n    */\n\n    if (Math.abs(headingDiff) > 180) {\n      if (nextPoint.viewport > lastPoint.viewport) {\n        headingDiff = -lastPoint.viewport - (360 - nextPoint.viewport);\n      } else {\n        headingDiff = -(-(360 - lastPoint.viewport) - nextPoint.viewport);\n      }\n    }\n\n    if (Math.abs(courseDiff) > 180) {\n      if (nextPoint.course > lastPoint.course) {\n        courseDiff = -lastPoint.course - (360 - nextPoint.course);\n      } else {\n        courseDiff = -(-(360 - lastPoint.course) - nextPoint.course);\n      }\n    }\n\n    const heading = (headingDiff * percentage) + lastPoint.viewport;\n    const course = (courseDiff * percentage) + lastPoint.course;\n    const accuracy = (accuracyDiff * percentage) + lastPoint.horizontalAccuracy;\n\n    let altitude = null;\n    let speed = null;\n\n    if (altitudeDiff != null) {\n      altitude = (altitudeDiff * percentage) + lastPoint.altitude;\n    }\n\n    if (speedDiff != null) {\n      speed = (speedDiff * percentage) + lastPoint.speed;\n    }\n\n    return {\n      time: time,\n      location: location,\n      course: course,\n      viewport: heading,\n      speed: speed,\n      altitude: altitude,\n      accuracy: accuracy,\n      prev: lastPoint,\n      next: nextPoint\n    };\n  }\n}\n"],"mappings":"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"}