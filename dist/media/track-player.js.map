{"version":3,"file":"track-player.js","names":["TrackPlayer","track","firstSegment","firstTimestamp","firstPoint","time","lastTimestamp","lastSegment","lastPoint","duration","firstTimeStamp","findPreviousTrackPointIndexes","segmentIndex","pointIndex","timestamp","milliseconds","segments","segment","points","point","Math","max","length","findPreviousTrackPoint","findNextTrackPoint","trackTime","nextPoint","nextTimestamp","lastLatitude","latitude","lastLongitude","longitude","nextLatitude","nextLongitude","isLastPointInvalid","isNextPointInvalid","range","percentage","lastLocation","nextLocation","lon","lat","location","headingDiff","viewport","courseDiff","course","accuracyDiff","horizontalAccuracy","lastAltitude","altitude","nextAltitude","lastSpeed","speed","nextSpeed","altitudeDiff","speedDiff","abs","heading","accuracy","prev","next"],"sources":["../../src/media/track-player.js"],"sourcesContent":["export default class TrackPlayer {\n  constructor(track) {\n    this.track = track;\n\n    if (this.track.firstSegment) {\n      this.firstTimestamp = this.track.firstSegment.firstPoint.time;\n      this.lastTimestamp = this.track.lastSegment.lastPoint.time;\n      this.duration = this.lastTimestamp - this.firstTimeStamp;\n    }\n  }\n\n  findPreviousTrackPointIndexes(time) {\n    let segmentIndex = 0;\n    let pointIndex = 0;\n\n    let timestamp = null;\n\n    const milliseconds = time;\n\n    for (const segment of this.track.segments) {\n      for (const point of segment.points) {\n        timestamp = point.time;\n\n        if (timestamp > milliseconds) {\n          return [ segmentIndex, Math.max(0, pointIndex - 1) ];\n        }\n\n        ++pointIndex;\n      }\n\n      ++segmentIndex;\n    }\n\n    // if the video time is beyond the end of the track, return the last index\n    if (milliseconds >= this.lastTimestamp) {\n      return [ this.track.segments.length - 1, this.track.lastSegment.points.length - 1 ];\n    }\n\n    return [ 0, 0 ];\n  }\n\n  findPreviousTrackPoint(time) {\n    const [ segmentIndex, pointIndex ] = this.findPreviousTrackPointIndexes(time);\n    return this.track.segments[segmentIndex].points[pointIndex];\n  }\n\n  findNextTrackPoint(time) {\n    const [ segmentIndex, pointIndex ] = this.findPreviousTrackPointIndexes(time);\n\n    if (pointIndex + 1 < this.track.segments[segmentIndex].points.length) {\n      return this.track.segments[segmentIndex].points[pointIndex + 1];\n    }\n\n    return this.track.segments[segmentIndex].points[pointIndex];\n  }\n\n  point(trackTime) {\n    if (this.track == null || this.track.segments.length === 0) {\n      return null;\n    }\n\n    const time = (trackTime * 1000.0) + this.firstTimestamp;\n\n    const lastPoint = this.findPreviousTrackPoint(time);\n    const nextPoint = this.findNextTrackPoint(time);\n\n    const lastTimestamp = lastPoint.time;\n    const nextTimestamp = nextPoint.time;\n\n    const lastLatitude = lastPoint.latitude;\n    const lastLongitude = lastPoint.longitude;\n\n    const nextLatitude = nextPoint.latitude;\n    const nextLongitude = nextPoint.longitude;\n\n    const isLastPointInvalid = lastLatitude == null || lastLongitude == null;\n    const isNextPointInvalid = nextLatitude == null || nextLongitude == null;\n\n    if (isLastPointInvalid || isNextPointInvalid) {\n      return null;\n    }\n\n    const range = nextTimestamp - lastTimestamp;\n    const percentage = range === 0 ? 0 : (time - lastTimestamp) / range;\n\n    const lastLocation = [ lastPoint.latitude, lastPoint.longitude ];\n    const nextLocation = [ nextPoint.latitude, nextPoint.longitude ];\n\n    const lon = ((nextLocation[1] - lastLocation[1]) * percentage) + lastLocation[1];\n    const lat = ((nextLocation[0] - lastLocation[0]) * percentage) + lastLocation[0];\n\n    const location = [ lat, lon ];\n\n    let headingDiff = nextPoint.viewport - lastPoint.viewport;\n    let courseDiff = nextPoint.course - lastPoint.course;\n\n    const accuracyDiff = nextPoint.horizontalAccuracy - lastPoint.horizontalAccuracy;\n\n    const lastAltitude = lastPoint.altitude;\n    const nextAltitude = nextPoint.altitude;\n\n    const lastSpeed = lastPoint.speed;\n    const nextSpeed = nextPoint.speed;\n\n    let altitudeDiff = null;\n\n    if (lastAltitude != null && nextAltitude != null) {\n      altitudeDiff = nextAltitude - lastAltitude;\n    }\n\n    let speedDiff = null;\n\n    if (lastSpeed != null && nextSpeed != null && lastSpeed > -1 && nextSpeed > -1) {\n      speedDiff = nextSpeed - lastSpeed;\n    }\n\n    /*\n\n    When the diff between the 2 points is greater than 180, we need\n    to reverse the direction of the tweening so it produces the fastest\n    transition between the 2 angles. By negating the different angles we\n    produce a much simpler value.\n\n    Example 1:\n      going from 30 to 350 should produce a -40 degree counterclockwise\n      result, not a 320 clockwise animation\n\n    Example 2:\n      going from 350 to 30 should produce a 40 degree clockwise\n      result, not a 320 counterclockwise animation\n\n    */\n\n    if (Math.abs(headingDiff) > 180) {\n      if (nextPoint.viewport > lastPoint.viewport) {\n        headingDiff = -lastPoint.viewport - (360 - nextPoint.viewport);\n      } else {\n        headingDiff = -(-(360 - lastPoint.viewport) - nextPoint.viewport);\n      }\n    }\n\n    if (Math.abs(courseDiff) > 180) {\n      if (nextPoint.course > lastPoint.course) {\n        courseDiff = -lastPoint.course - (360 - nextPoint.course);\n      } else {\n        courseDiff = -(-(360 - lastPoint.course) - nextPoint.course);\n      }\n    }\n\n    const heading = (headingDiff * percentage) + lastPoint.viewport;\n    const course = (courseDiff * percentage) + lastPoint.course;\n    const accuracy = (accuracyDiff * percentage) + lastPoint.horizontalAccuracy;\n\n    let altitude = null;\n    let speed = null;\n\n    if (altitudeDiff != null) {\n      altitude = (altitudeDiff * percentage) + lastPoint.altitude;\n    }\n\n    if (speedDiff != null) {\n      speed = (speedDiff * percentage) + lastPoint.speed;\n    }\n\n    return {\n      time: time,\n      location: location,\n      course: course,\n      viewport: heading,\n      speed: speed,\n      altitude: altitude,\n      accuracy: accuracy,\n      prev: lastPoint,\n      next: nextPoint\n    };\n  }\n}\n"],"mappings":";;;;;;;;;;;IAAqBA,W;EACnB,qBAAYC,KAAZ,EAAmB;IACjB,KAAKA,KAAL,GAAaA,KAAb;;IAEA,IAAI,KAAKA,KAAL,CAAWC,YAAf,EAA6B;MAC3B,KAAKC,cAAL,GAAsB,KAAKF,KAAL,CAAWC,YAAX,CAAwBE,UAAxB,CAAmCC,IAAzD;MACA,KAAKC,aAAL,GAAqB,KAAKL,KAAL,CAAWM,WAAX,CAAuBC,SAAvB,CAAiCH,IAAtD;MACA,KAAKI,QAAL,GAAgB,KAAKH,aAAL,GAAqB,KAAKI,cAA1C;IACD;EACF;;;;SAEDC,6B,GAAA,uCAA8BN,IAA9B,EAAoC;IAClC,IAAIO,YAAY,GAAG,CAAnB;IACA,IAAIC,UAAU,GAAG,CAAjB;IAEA,IAAIC,SAAS,GAAG,IAAhB;IAEA,IAAMC,YAAY,GAAGV,IAArB;;IAEA,qDAAsB,KAAKJ,KAAL,CAAWe,QAAjC,wCAA2C;MAAA,IAAhCC,OAAgC;;MACzC,sDAAoBA,OAAO,CAACC,MAA5B,2CAAoC;QAAA,IAAzBC,KAAyB;QAClCL,SAAS,GAAGK,KAAK,CAACd,IAAlB;;QAEA,IAAIS,SAAS,GAAGC,YAAhB,EAA8B;UAC5B,OAAO,CAAEH,YAAF,EAAgBQ,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYR,UAAU,GAAG,CAAzB,CAAhB,CAAP;QACD;;QAED,EAAEA,UAAF;MACD;;MAED,EAAED,YAAF;IACD,CApBiC,CAsBlC;;;IACA,IAAIG,YAAY,IAAI,KAAKT,aAAzB,EAAwC;MACtC,OAAO,CAAE,KAAKL,KAAL,CAAWe,QAAX,CAAoBM,MAApB,GAA6B,CAA/B,EAAkC,KAAKrB,KAAL,CAAWM,WAAX,CAAuBW,MAAvB,CAA8BI,MAA9B,GAAuC,CAAzE,CAAP;IACD;;IAED,OAAO,CAAE,CAAF,EAAK,CAAL,CAAP;EACD,C;;SAEDC,sB,GAAA,gCAAuBlB,IAAvB,EAA6B;IAC3B,4BAAqC,KAAKM,6BAAL,CAAmCN,IAAnC,CAArC;IAAA,IAAQO,YAAR;IAAA,IAAsBC,UAAtB;;IACA,OAAO,KAAKZ,KAAL,CAAWe,QAAX,CAAoBJ,YAApB,EAAkCM,MAAlC,CAAyCL,UAAzC,CAAP;EACD,C;;SAEDW,kB,GAAA,4BAAmBnB,IAAnB,EAAyB;IACvB,6BAAqC,KAAKM,6BAAL,CAAmCN,IAAnC,CAArC;IAAA,IAAQO,YAAR;IAAA,IAAsBC,UAAtB;;IAEA,IAAIA,UAAU,GAAG,CAAb,GAAiB,KAAKZ,KAAL,CAAWe,QAAX,CAAoBJ,YAApB,EAAkCM,MAAlC,CAAyCI,MAA9D,EAAsE;MACpE,OAAO,KAAKrB,KAAL,CAAWe,QAAX,CAAoBJ,YAApB,EAAkCM,MAAlC,CAAyCL,UAAU,GAAG,CAAtD,CAAP;IACD;;IAED,OAAO,KAAKZ,KAAL,CAAWe,QAAX,CAAoBJ,YAApB,EAAkCM,MAAlC,CAAyCL,UAAzC,CAAP;EACD,C;;SAEDM,K,GAAA,eAAMM,SAAN,EAAiB;IACf,IAAI,KAAKxB,KAAL,IAAc,IAAd,IAAsB,KAAKA,KAAL,CAAWe,QAAX,CAAoBM,MAApB,KAA+B,CAAzD,EAA4D;MAC1D,OAAO,IAAP;IACD;;IAED,IAAMjB,IAAI,GAAIoB,SAAS,GAAG,MAAb,GAAuB,KAAKtB,cAAzC;IAEA,IAAMK,SAAS,GAAG,KAAKe,sBAAL,CAA4BlB,IAA5B,CAAlB;IACA,IAAMqB,SAAS,GAAG,KAAKF,kBAAL,CAAwBnB,IAAxB,CAAlB;IAEA,IAAMC,aAAa,GAAGE,SAAS,CAACH,IAAhC;IACA,IAAMsB,aAAa,GAAGD,SAAS,CAACrB,IAAhC;IAEA,IAAMuB,YAAY,GAAGpB,SAAS,CAACqB,QAA/B;IACA,IAAMC,aAAa,GAAGtB,SAAS,CAACuB,SAAhC;IAEA,IAAMC,YAAY,GAAGN,SAAS,CAACG,QAA/B;IACA,IAAMI,aAAa,GAAGP,SAAS,CAACK,SAAhC;IAEA,IAAMG,kBAAkB,GAAGN,YAAY,IAAI,IAAhB,IAAwBE,aAAa,IAAI,IAApE;IACA,IAAMK,kBAAkB,GAAGH,YAAY,IAAI,IAAhB,IAAwBC,aAAa,IAAI,IAApE;;IAEA,IAAIC,kBAAkB,IAAIC,kBAA1B,EAA8C;MAC5C,OAAO,IAAP;IACD;;IAED,IAAMC,KAAK,GAAGT,aAAa,GAAGrB,aAA9B;IACA,IAAM+B,UAAU,GAAGD,KAAK,KAAK,CAAV,GAAc,CAAd,GAAkB,CAAC/B,IAAI,GAAGC,aAAR,IAAyB8B,KAA9D;IAEA,IAAME,YAAY,GAAG,CAAE9B,SAAS,CAACqB,QAAZ,EAAsBrB,SAAS,CAACuB,SAAhC,CAArB;IACA,IAAMQ,YAAY,GAAG,CAAEb,SAAS,CAACG,QAAZ,EAAsBH,SAAS,CAACK,SAAhC,CAArB;IAEA,IAAMS,GAAG,GAAI,CAACD,YAAY,CAAC,CAAD,CAAZ,GAAkBD,YAAY,CAAC,CAAD,CAA/B,IAAsCD,UAAvC,GAAqDC,YAAY,CAAC,CAAD,CAA7E;IACA,IAAMG,GAAG,GAAI,CAACF,YAAY,CAAC,CAAD,CAAZ,GAAkBD,YAAY,CAAC,CAAD,CAA/B,IAAsCD,UAAvC,GAAqDC,YAAY,CAAC,CAAD,CAA7E;IAEA,IAAMI,QAAQ,GAAG,CAAED,GAAF,EAAOD,GAAP,CAAjB;IAEA,IAAIG,WAAW,GAAGjB,SAAS,CAACkB,QAAV,GAAqBpC,SAAS,CAACoC,QAAjD;IACA,IAAIC,UAAU,GAAGnB,SAAS,CAACoB,MAAV,GAAmBtC,SAAS,CAACsC,MAA9C;IAEA,IAAMC,YAAY,GAAGrB,SAAS,CAACsB,kBAAV,GAA+BxC,SAAS,CAACwC,kBAA9D;IAEA,IAAMC,YAAY,GAAGzC,SAAS,CAAC0C,QAA/B;IACA,IAAMC,YAAY,GAAGzB,SAAS,CAACwB,QAA/B;IAEA,IAAME,SAAS,GAAG5C,SAAS,CAAC6C,KAA5B;IACA,IAAMC,SAAS,GAAG5B,SAAS,CAAC2B,KAA5B;IAEA,IAAIE,YAAY,GAAG,IAAnB;;IAEA,IAAIN,YAAY,IAAI,IAAhB,IAAwBE,YAAY,IAAI,IAA5C,EAAkD;MAChDI,YAAY,GAAGJ,YAAY,GAAGF,YAA9B;IACD;;IAED,IAAIO,SAAS,GAAG,IAAhB;;IAEA,IAAIJ,SAAS,IAAI,IAAb,IAAqBE,SAAS,IAAI,IAAlC,IAA0CF,SAAS,GAAG,CAAC,CAAvD,IAA4DE,SAAS,GAAG,CAAC,CAA7E,EAAgF;MAC9EE,SAAS,GAAGF,SAAS,GAAGF,SAAxB;IACD;IAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;IAMI,IAAIhC,IAAI,CAACqC,GAAL,CAASd,WAAT,IAAwB,GAA5B,EAAiC;MAC/B,IAAIjB,SAAS,CAACkB,QAAV,GAAqBpC,SAAS,CAACoC,QAAnC,EAA6C;QAC3CD,WAAW,GAAG,CAACnC,SAAS,CAACoC,QAAX,IAAuB,MAAMlB,SAAS,CAACkB,QAAvC,CAAd;MACD,CAFD,MAEO;QACLD,WAAW,GAAG,EAAE,EAAE,MAAMnC,SAAS,CAACoC,QAAlB,IAA8BlB,SAAS,CAACkB,QAA1C,CAAd;MACD;IACF;;IAED,IAAIxB,IAAI,CAACqC,GAAL,CAASZ,UAAT,IAAuB,GAA3B,EAAgC;MAC9B,IAAInB,SAAS,CAACoB,MAAV,GAAmBtC,SAAS,CAACsC,MAAjC,EAAyC;QACvCD,UAAU,GAAG,CAACrC,SAAS,CAACsC,MAAX,IAAqB,MAAMpB,SAAS,CAACoB,MAArC,CAAb;MACD,CAFD,MAEO;QACLD,UAAU,GAAG,EAAE,EAAE,MAAMrC,SAAS,CAACsC,MAAlB,IAA4BpB,SAAS,CAACoB,MAAxC,CAAb;MACD;IACF;;IAED,IAAMY,OAAO,GAAIf,WAAW,GAAGN,UAAf,GAA6B7B,SAAS,CAACoC,QAAvD;IACA,IAAME,MAAM,GAAID,UAAU,GAAGR,UAAd,GAA4B7B,SAAS,CAACsC,MAArD;IACA,IAAMa,QAAQ,GAAIZ,YAAY,GAAGV,UAAhB,GAA8B7B,SAAS,CAACwC,kBAAzD;IAEA,IAAIE,QAAQ,GAAG,IAAf;IACA,IAAIG,KAAK,GAAG,IAAZ;;IAEA,IAAIE,YAAY,IAAI,IAApB,EAA0B;MACxBL,QAAQ,GAAIK,YAAY,GAAGlB,UAAhB,GAA8B7B,SAAS,CAAC0C,QAAnD;IACD;;IAED,IAAIM,SAAS,IAAI,IAAjB,EAAuB;MACrBH,KAAK,GAAIG,SAAS,GAAGnB,UAAb,GAA2B7B,SAAS,CAAC6C,KAA7C;IACD;;IAED,OAAO;MACLhD,IAAI,EAAEA,IADD;MAELqC,QAAQ,EAAEA,QAFL;MAGLI,MAAM,EAAEA,MAHH;MAILF,QAAQ,EAAEc,OAJL;MAKLL,KAAK,EAAEA,KALF;MAMLH,QAAQ,EAAEA,QANL;MAOLS,QAAQ,EAAEA,QAPL;MAQLC,IAAI,EAAEpD,SARD;MASLqD,IAAI,EAAEnC;IATD,CAAP;EAWD,C"}